"""
# 719. Find K-th Smallest Pair Distance


# Given an integer array, return the k-th smallest distance among all the pairs.
# The distance of a pair (A, B) is defined as the absolute difference between A and B.

# Example 1:
# Input:
# nums = [1,3,1]
# k = 1
# Output: 0
# Explanation:
# Here are all the pairs:
# (1,3) -> 2
# (1,1) -> 0
# (3,1) -> 2
# Then the 1st smallest distance pair is (1,1), and its distance is 0.

# Note:
# 2 <= len(nums) <= 10000.
# 0 <= nums[i] < 1000000.
# 1 <= k <= len(nums) * (len(nums) - 1) / 2.
"""
import bisect
import heapq


class SmallestDistancePair:

    def doit_binary_search(self, matrix, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        matrix.sort()
        lo = 0
        hi = matrix[-1] - matrix[0]

        while lo < hi:

            mid = lo + (hi - lo) // 2
            cnt, j = 0, 0

            for i in range(len(matrix)):
                while j < len(matrix) and matrix[j] - matrix[i] <= mid:
                    j += 1
                cnt += j - i - 1

            if cnt < k:
                lo = mid + 1
            else:
                hi = mid
        return lo

    """
    Approach #2: Binary Search + Prefix Sum [Accepted]
    Intuition

    Let's binary search for the answer. It's definitely in the range [0, W], where W = max(nums) - min(nums)].

    Let possible(guess) be true if and only if there are k or more pairs with distance less than or equal to guess. We will focus on evaluating our possible function quickly.

    Algorithm

    Let prefix[v] be the number of points in nums less than or equal to v. Also, let multiplicity[j] be the number of points i with i < j and nums[i] == nums[j].
    We can record both of these with a simple linear scan.

    Now, for every point i, the number of points j with i < j and nums[j] - nums[i] <= guess is prefix[x+guess] - prefix[x] + (count[i] - multiplicity[i]),
    where count[i] is the number of ocurrences of nums[i] in nums. The sum of this over all i is the number of pairs with distance <= guess.

    Finally, because the sum of count[i] - multiplicity[i] is the same as the sum of multiplicity[i], we could just replace that term with multiplicity[i] without affecting the answer.
    (Actually, the sum of multiplicities in total will be a constant used in the answer, so we could precalculate it if we wanted.)

    In our Java solution, we computed possible = count >= k directly in the binary search instead of using a helper function.

    Complexity Analysis

    Time Complexity: O(W+NlogW+NlogN), where NN is the length of nums, and WW is equal to nums[nums.length - 1] - nums[0].
    We do O(W) work to calculate prefix initially. The logW factor comes from our binary search, and
    we do O(N) work inside our call to possible (or to calculate count in Java). The final O(NlogN) factor comes from sorting.

    Space Complexity: O(N+W), the space used to store multiplicity and prefix.
    """
    def doit_binary_search(self, nums, k):
        def possible(guess):
            #Is there k or more pairs with distance <= guess?
            return sum(prefix[min(x + guess, W)] - prefix[x] + multiplicity[i] for i, x in enumerate(nums)) >= k

        nums.sort()
        W = nums[-1]

        #multiplicity[i] = number of nums[j] == nums[i] (j < i)
        multiplicity = [0] * len(nums)
        for i, x in enumerate(nums):
            if i and x == nums[i-1]:
                multiplicity[i] = 1 + multiplicity[i - 1]

        #prefix[v] = number of values <= v
        prefix = [0] * (W + 1)
        left = 0
        for i in range(len(prefix)):
            while left < len(nums) and nums[left] == i:
                left += 1
            prefix[i] = left

        lo = 0
        hi = nums[-1] - nums[0]
        while lo < hi:
            mi = (lo + hi) / 2
            if possible(mi):
                hi = mi
            else:
                lo = mi + 1

        return lo


    """
    Approach #3: Binary Search + Sliding Window [Accepted]
    Intuition
    
    As in Approach #2, let's binary search for the answer, and we will focus on evaluating our possible function quickly.
    
    Algorithm
    
    We will use a sliding window approach to count the number of pairs with distance <= guess.
    
    For every possible right, we maintain the loop invariant: left is the smallest value such that nums[right] - nums[left] <= guess. 
    Then, the number of pairs with right as it's right-most endpoint is right - left, and we add all of these up.
    """
    def doit_binary_search(self, nums, k):
        def possible(guess):
            #Is there k or more pairs with distance <= guess?
            count = left = 0
            for right, x in enumerate(nums):
                while x - nums[left] > guess:
                    left += 1
                count += right - left
            return count >= k

        nums.sort()
        lo = 0
        hi = nums[-1] - nums[0]
        while lo < hi:
            mi = (lo + hi) / 2
            if possible(mi):
                hi = mi
            else:
                lo = mi + 1

        return lo

    """
    Approach #1: Heap [Time Limit Exceeded]
    Intuition and Algorithm
    
    Sort the points. For every point with index i, the pairs with indexes (i, j) [by order of distance] are (i, i+1), (i, i+2), ..., (i, N-1).
    
    Let's keep a heap of pairs, initially heap = [(i, i+1) for all i], and ordered by distance (the distance of (i, j) is nums[j] - nums[i].) Whenever we use a pair (i, x) from our heap, we will add (i, x+1) to our heap when appropriate.
    """
    def doit_heap(self, nums: list, k: int) -> int:
        from heapq import heappush, heappop, heapify
        n = len(nums)
        nums.sort()
        heap = [(nums[i + 1] - nums[i], i, i + 1) for i in range(n - 1)]
        heapify(heap)

        for _ in range(k):
            d, root, nei = heappop(heap)
            if nei + 1 < n:
                heappush(heap, (nums[nei + 1] - nums[root], root, nei + 1))

        return d

    def doit1(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        nums.sort()

        diff = []
        maxv, minv = float('-inf'), float('inf')
        for i in range(len(nums)-1):
            diff.append([])
            for j in range(i+1, len(nums)):
                c = nums[j] - nums[i]
                diff[i].append(c)
                maxv = max(maxv, c)
                minv = min(minv, c)

        lo, hi = minv, maxv
        while lo < hi:
            
            mid = lo + (hi - lo) // 2
            num, maxv = 0, float('inf')    
            for i in range(len(diff)):
                r = bisect.bisect(diff[i], mid);
                if r > 0:
                    maxv = max(maxv, diff[i][r-1])
                num += 0

            if num == k:
                return maxv
            elif k > num:
                lo = mid + 1
            else:
                hi = mid

        return -1
            

if __name__ == "__main__":

    res = SmallestDistancePair().doit([1,3,1], 1)

    res = SmallestDistancePair().doit([1,6,1], 3)

    res = SmallestDistancePair().doit([62,100,4], 2) 

    res = SmallestDistancePair().doit([1,2,0,2,1,0,1,1,0,2,2,0,2,0,1,1,1,0,1,0,1,1,2,2,2,2,0,0,2,1,2,1,2,0,0,0,1,0,0,1,0,2,1,1,1,1,0,2,2,1,0,2,0,2,2,2,1,0,2,2,2,2,0,0,1,0,1,1,2,1,2,2,1,1,0,2,0,1,0,1,1,2,0,1,1,1,1,2,0,2,2,0,0,1,1,1,1,2,1,2,2,1,2,0,1,2,2,1,1,2,1,0,1,1,1,0,0,1,2,0,2,1,0,1,2,0,2,2,1,0,0,2,0,1,1,0,1,0,1,0,1,2,2,2,0,1,1,1,1,1,0,2,2,2,1,0,1,0,1,0,0,0,0,2,0,0,1,1,2,0,2,1,2,0,0,1,0,1,2,1,0,1,1,1,1,0,0,2,2,1,1,0,0,0,0,1,2,2,1,1,0,1,2,0,0,2,1,2,1,2,0,2,1,1,2,2,2,2,2,0,1,1,0,1,2,2,0,2,2,2,0,2,0,1,1,2,2,0,2,2,2,2,2,2,1,0,2,2,2,0,2,0,2,0,2,1,0,1,0,1,1,0,2,0,1,0,0,2,0,0,0,2,0,2,2,0,2,0,0,1,1,0,2,0,1,2,2,0,1,1,2,0,0,0,2,1,0,1,0,2,1,2,0,1,2,1,1,1,0,1,2,1,2,2,1,2,0,2,1,0,1,1,1,2,0,2,2,2,2,1,0,2,2,1,1,1,1,0,1,2,2,0,1,2,2,1,0,0,1,2,1,0,2,1,1,1,0,0,0,1,1,1,0,2,0,2,0,1,2,2,0,2,1,2,2,0,0,0,0,2,1,1,2,0,2,0,1,0,1,0,2,0,0,0,2,1,2,0,1,2,1,2,1,0,1,0,1,0,0,1,2,1,1,2,1,1,2,2,1,0,1,1,2,2,1,2,2,2,1,0,1,1,1,0,0,0,2,1,1,1,2,2,1,2,0,2,1,2,0,2,2,2,1,1,2,2,0,0,2,2,2,1,2,2,1,0,2,0,2,0,2,1,2,2,1,1,1,1,1,0,0,1,0,2,2,0,0,2,1,0,1,0,2,1,0,0,0,0,1,2,1,2,0,0,1,1,2,2,2,2,0,2,1,0,0,0,2,0,1,1,0,2,1,1,1,2,1,0,0,1,0,1,0,1,2,0,2,1,0,0,1,2,1,1,0,0,0,2,2,2,1,1,2,2,0,1,0,2,2,2,0,1,0,0,1,0,0,1,1,1,1,1,1,2,1,2,0,2,0,2,1,2,2,2,0,1,0,1,2,0,2,2,1,2,0,1,2,2,0,1,1,0,1,1,0,0,0,1,2,1,0,0,2,0,1,0,2,2,0,1,0,0,0,1,0,0,0,2,1,1,1,1,1,0,1,1,0,1,0,1,0,2,2,0,2,2,0,0,1,2,0,1,1,1,2,0,0,0,2,0,2,2,2,2,1,0,2,2,0,0,1,1,2,2,2,1,1,2,0,1,0,0,1,0,1,2,0,1,2,0,1,1,1,1,2,0,1,0,1,2,2,0,0,2,0,1,2,1,2,1,0,0,1,0,0,1,2,0,1,0,0,0,0,2,0,1,0,1,2,0,1,2,0,0,0,0,1,1,2,0,0,0,2,1,1,0,0,2,2,1,0,0,1,0,1,0,1,1,0,2,0,1,1,2,2,1,1,0,2,0,0,1,0,1,2,2,1,2,2,2,2,2,1,2,0,0,0,1,1,0,0,2,1,0,1,0,2,2,0,1,2,2,2,0,0,0,2,2,1,2,1,0,0,0,1,1,2,1,2,0,1,2,1,0,1,2,0,1,2,1,2,1,1,1,2,2,1,0,1,0,2,1,2,0,2,0,0,0,1,2,1,0,0,0,1,2,0,2,2,2,1,0,2,2,1,1,2,0,0,1,2,2,2,1,2,1,2,1,0,2,2,0,0,0,2,0,1,0,1,0,2,2,2,2,0,1,1,1,1,0,1,0,0,1,2,0,1,0,0,2,0,1,1,1,1,2,0,1,1,2,0,2,1,2,1,1,0,1,1,2,1,2,0,1,0,0,0,1,0,2,0,0,2,0,0,1,0,1,2,2,1,2,0,2,2,2,0,2,0,2,1,0,0,0,0,0,0,1,0,2,0,1,1,0,2,1,2,1,1,0,2,1,2,0,1,1,1,0,1,0,1,0,0,1,1,0,1,1,0,2,2,1,1,0,1,0,0,0,2,2,2,0,1,2,1,2,0,2,1,0,0,1,2,2,1,0,1,2,0,0,2,1,1,2,0,0,1,0,2,2,2,2,0,1,0,0,0,1,1,0,2,0,2,0,2,2,2,0,2,0,0,2,1,0,2,2,2,1,2,0,2,2,0,2,1,2,2,0,1,0,2,0,1,1,2,2,2,2,0,0,0,0,2,2,2,2,1,0,2,0,2,0,1,0,1,1,2,2,1,2,1,2,0,1,2,2,2,0,1,0,1,0,1,0,1,0,1,2,2,0,2,2,2,0,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,2,0,0,2,2,2,2,1,2,2,1,2,0,1,0,1,1,0,0,2,2,1,2,2,1,0,0,0,0,0,0,1,1,0,1,0,2,0,1,0,2,2,2,0,1,0,2,1,2,2,0,2,1,1,1,1,1,1,2,2,1,0,1,2,1,1,0,0,1,0,2,0,2,2,2,2,1,2,2,2,2,1,2,2,1,1,1,0,1,2,2,0,0,2,1,0,2,1,0,2,2,0,2,1,0,2,1,0,0,0,0,2,0,1,0,2,0,1,2,2,0,1,0,1,1,1,2,1,0,0,0,0,0,2,0,1,1,1,0,1,2,2,1,2,2,0,2,2,0,0,0,2,2,2,1,1,2,1,2,1,2,1,1,0,0,2,0,2,0,1,1,0,0,2,1,0,0,1,2,0,1,0,2,1,1,1,1,2,2,0,2,2,0,1,1,2,2,0,2,0,1,0,2,0,2,2,2,1,2,2,0,1,1,2,2,1,2,2,2,2,2,2,0,0,1,1,0,0,1,0,0,0,2,1,2,1,2,2,1,1,0,2,1,0,0,1,2,2,1,1,1,1,0,0,0,2,0,0,2,1,1,2,2,2,1,2,1,0,1,2,1,2,2,1,1,0,0,0,1,1,1,0,0,1,1,1,2,2,1,2,1,0,2,0,1,0,0,2,0,0,0,2,1,0,2,0,2,1,1,2,0,1,1,0,2,0,1,2,2,0,0,2,0,1,1,0,2,2,1,0,0,0,2,0,1,0,0,0,2,0,2,2,1,0,1,2,2,2,2,1,1,2,2,2,0,1,2,0,2,1,2,1,0,2,0,1,0,0,2,1,0,0,0,2,0,0,1,2,2,0,0,1,0,1,1,2,2,2,0,2,1,0,2,0,1,2,1,0,1,1,1,2,1,0,0,0,2,1,0,2,2,0,1,0,2,0,2,2,2,0,1,2,2,2,1,0,0,1,0,0,0,1,1,0,1,2,2,2,0,1,0,0,1,2,2,2,0,1,1,1,2,0,2,1,1,2,2,1,0,1,2,0,2,1,1,0,1,1,2,0,1,0,2,1,2,0,2,2,2,2,0,2,0,2,1,0,1,0,2,1,0,0,0,2,0,0,0,1,0,2,1,0,0,0,0,0,2,1,0,0,0,2,1,2,0,0,0,2,2,2,2,1,1,1,0,1,2,2,0,0,1,1,0,2,0,2,1,2,0,0,2,1,0,0,0,2,2,0,1,1,0,0,0,0,1,0,1,1,2,1,2,1,2,0,1,1,2,0,0,2,1,0,0,2,0,1,2,1,1,2,2,2,1,2,2,0,1,2,0,1,2,1,2,0,2,1,0,2,1,1,2,0,2,0,1,2,2,1,2,1,1,1,1,2,1,2,1,2,0,1,1,1,2,0,1,2,1,1,0,2,1,0,2,0,0,0,2,1,0,1,2,0,1,0,1,1,0,0,1,0,2,0,0,0,0,2,2,0,1,1,2,1,2,2,1,0,1,1,2,2,0,1,0,1,0,2,1,0,2,0,2,2,1,1,1,1,2,2,2,2,0,1,1,0,2,0,1,2,1,2,0,0,2,2,1,2,2,1,1,0,0,0,0,2,1,0,2,2,0,1,2,2,2,1,1,2,2,2,2,2,2,2,2,2,0,0,1,2,2,0,2,0,1,2,2,1,0,2,2,0,0,0,2,0,0,0,1,2,1,0,2,2,1,2,0,0,2,2,2,1,1,1,2,0,0,2,0,0,2,1,2,2,2,1,0,0,1,1,1,0,0,2,0,1,1,0,0,0,1,0,2,0,0,1,1,2,0,2,0,2,0,1,0,0,1,1,0,1,0,1,1,0,2,1,0,1,0,1,2,0,0,1,2,0,2,1,0,1,1,2,0,2,2,1,1,2,2,1,1,0,2,2,2,2,1,2,0,2,0,2,2,1,1,0,1,0,0,1,2,2,1,1,1,0,1,0,1,2,0,2,1,2,2,0,2,2,0,1,1,0,0,1,1,1,1,1,0,1,2,0,2,2,0,1,2,2,1,1,2,0,1,1,1,2,0,2,1,1,2,1,1,1,1,2,1,0,1,2,0,1,1,1,0,2,1,2,0,0,2,1,0,1,0,2,2,2,1,1,1,2,2,0,2,1,0,2,2,2,2,2,2,0,0,1,2,2,2,0,0,2,0,2,2,2,2,2,2,2,0,2,1,1,2,0,2,2,0,2,1,0,0,1,1,1,1,2,1,2,0,2,0,0,0,2,2,0,0,2,1,2,1,0,1,0,2,0,1,2,0,1,2,0,1,1,1,1,0,2,2,1,0,2,1,0,2,0,1,0,0,2,1,0,1,0,2,2,2,1,2,2,0,2,1,0,2,0,2,1,1,2,0,1,2,0,0,1,1,1,0,2,0,0,2,2,0,0,2,2,1,0,1,2,1,1,2,1,0,0,1,0,0,0,0,0,1,2,2,2,1,1,2,0,1,2,1,2,1,1,1,1,1,0,2,1,1,1,0,2,0,0,0,2,1,0,1,2,0,1,1,2,1,1,2,2,0,2,0,2,0,2,0,2,2,0,0,1,0,2,0,0,0,0,0,1,0,2,1,1,0,1,2,2,1,0,2,2,1,2,0,1,2,2,2,0,1,0,0,1,0,2,1,0,1,1,1,1,2,1,2,0,1,2,2,2,2,2,0,1,0,2,2,0,0,0,0,1,2,1,1,1,1,0,1,0,0,0,0,2,2,2,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,2,0,1,1,2,0,0,1,2,0,2,0,2,2,1,2,2,2,2,2,1,1,2,1,1,1,2,0,1,2,2,1,1,0,2,1,2,1,1,1,0,2,1,0,0,2,2,2,1,0,1,2,1,2,1,1,0,0,0,2,1,0,1,0,0,1,2,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,2,2,0,0,0,1,2,0,1,1,1,1,2,1,1,0,1,1,1,0,1,1,2,1,2,2,1,2,2,2,1,1,0,2,1,0,2,0,1,1,0,1,2,1,1,0,2,0,0,1,0,0,1,0,0,1,2,2,0,1,2,1,2,2,2,2,0,2,1,1,0,0,0,1,1,2,2,0,0,0,1,2,0,1,2,0,1,2,1,1,2,1,2,2,0,1,2,2,1,2,0,1,1,0,0,0,0,1,2,2,2,0,1,0,1,0,2,1,1,0,2,1,2,1,2,0,2,0,0,1,2,0,1,0,0,0,1,1,1,2,1,1,1,0,1,2,0,0,0,1,0,2,0,2,0,1,1,1,0,0,0,2,0,1,2,0,1,0,1,1,0,1,0,1,1,2,1,1,2,2,1,1,1,0,1,0,1,1,2,1,2,2,1,1,2,2,2,1,1,1,1,1,1,2,1,1,0,2,1,0,0,1,1,1,0,2,2,0,0,1,1,2,2,1,2,2,2,0,0,2,2,2,0,1,0,2,1,0,0,2,0,0,1,2,1,2,1,2,0,0,1,0,2,0,0,2,0,1,1,2,2,0,1,0,1,1,1,2,2,1,1,1,2,0,1,2,0,1,1,1,0,1,0,2,2,0,2,1,0,0,1,2,0,0,1,0,1,0,2,2,1,0,1,2,2,0,2,2,0,0,1,1,1,2,1,2,2,2,0,1,0,0,0,1,0,0,0,1,1,0,2,1,0,2,1,2,0,2,0,2,2,0,2,2,0,1,0,0,2,0,2,2,1,0,2,0,2,2,1,1,2,2,2,1,0,0,1,2,1,0,1,0,2,2,1,2,1,2,0,1,0,1,2,2,1,0,2,0,2,1,0,1,2,0,0,2,2,1,1,0,0,1,2,0,2,2,1,2,1,0,1,1,0,0,2,2,2,2,2,0,1,0,1,1,1,0,1,2,1,0,2,2,0,1,1,2,0,2,2,0,2,1,1,2,2,2,1,1,0,1,0,2,2,2,2,0,2,2,1,0,0,1,1,0,1,2,1,0,0,0,2,2,0,2,0,1,2,2,1,1,1,2,0,2,0,0,1,2,0,1,1,0,1,1,1,2,0,0,0,2,1,0,2,1,2,1,0,1,1,2,2,0,1,0,2,2,2,1,1,0,1,2,1,2,0,0,0,0,1,1,1,1,0,2,1,0,0,2,0,2,0,1,1,0,0,1,2,0,2,2,2,1,1,0,0,0,0,1,0,1,2,2,2,0,1,0,1,1,0,0,1,0,0,1,1,2,2,0,0,2,2,0,0,0,2,2,2,2,1,1,2,2,2,0,0,2,0,1,2,2,2,2,0,0,2,0,2,2,2,0,2,1,1,1,1,0,2,0,2,0,0,1,2,2,1,0,2,0,1,2,2,1,2,0,0,2,0,0,1,1,1,0,2,0,2,2,2,2,1,2,2,0,1,2,2,2,0,0,0,1,0,1,2,0,0,0,0,1,2,0,0,2,2,0,1,1,2,2,2,2,0,0,0,1,0,1,0,1,1,0,0,0,2,2,0,0,1,1,0,2,2,1,1,0,2,0,2,1,0,1,2,1,1,2,1,0,0,1,2,1,1,2,2,0,1,2,0,0,0,1,1,2,0,2,1,2,0,1,0,0,0,2,0,1,1,2,2,2,0,0,0,2,2,1,0,2,1,0,0,2,1,1,2,0,2,0,2,0,1,2,2,0,0,0,2,2,1,1,1,0,0,1,1,0,0,0,2,1,1,0,1,0,2,0,1,0,2,0,2,1,0,1,2,0,0,2,1,1,0,0,1,0,2,1,1,1,2,1,2,2,0,2,2,1,2,2,2,1,0,1,1,1,2,1,1,1,1,0,0,1,1,0,2,2,0,1,1,1,1,2,1,1,0,0,2,2,0,2,1,1,1,1,2,0,2,2,2,0,1,0,1,0,0,1,0,2,0,0,0,2,1,1,2,2,0,1,1,0,0,1,0,2,0,2,2,0,2,2,0,0,1,2,0,1,0,0,0,0,1,2,0,1,1,0,0,2,0,0,2,0,1,1,2,2,1,0,1,0,0,2,2,2,0,0,1,0,2,0,1,2,1,0,1,1,2,2,2,2,0,0,0,2,1,1,2,0,1,1,1,0,0,0,1,0,2,0,2,0,2,0,0,1,0,0,2,0,2,2,2,2,2,1,0,2,0,0,0,0,0,0,2,0,2,0,1,0,2,2,2,1,1,1,0,1,0,1,1,0,2,0,0,1,2,2,1,2,0,0,0,2,2,0,1,1,0,2,0,1,2,1,0,0,0,1,1,1,2,0,1,1,1,2,1,0,2,1,0,1,0,1,2,0,1,2,0,2,0,0,0,2,0,2,2,2,0,1,1,2,0,0,1,1,0,1,1,0,2,0,1,1,2,2,1,0,2,1,2,0,0,0,2,2,2,0,1,1,0,0,1,1,1,1,0,0,2,0,2,2,0,1,0,0,1,1,1,1,1,0,0,2,0,0,2,0,2,2,2,2,1,1,1,2,0,2,1,1,0,0,1,2,1,2,2,2,2,0,0,0,1,1,0,1,0,1,1,1,2,0,2,2,2,0,1,0,1,2,2,0,0,2,0,0,1,0,0,1,2,1,0,1,2,2,1,2,2,1,1,0,2,1,0,1,1,2,1,2,1,0,2,0,1,1,0,0,1,0,2,1,1,1,2,1,0,2,2,1,2,2,1,2,2,2,2,1,1,2,1,0,0,2,2,1,1,2,1,1,1,0,0,0,0,0,0,2,2,1,0,1,0,1,1,2,2,0,1,1,2,2,1,0,2,1,1,1,2,1,2,0,0,2,0,2,0,0,0,0,2,2,2,0,0,0,2,0,2,1,0,2,1,1,0,1,0,0,2,2,1,1,2,0,0,0,1,1,1,1,1,0,2,2,2,2,1,0,0,0,1,0,1,1,0,1,2,2,1,0,1,1,0,2,0,2,2,1,1,1,1,0,0,2,2,1,2,0,0,2,1,0,2,1,2,1,2,1,0,2,2,2,0,0,1,1,0,0,1,1,1,1,2,2,2,1,0,2,0,2,2,2,1,1,1,0,0,1,1,0,1,0,0,2,1,2,0,0,0,1,2,0,1,2,0,1,0,0,0,1,0,1,2,2,1,2,0,1,0,2,1,0,1,2,1,1,1,2,1,0,0,2,1,1,1,0,2,1,2,2,2,2,2,1,1,2,1,2,1,0,1,1,0,1,2,0,1,2,2,2,2,2,1,0,2,2,2,2,0,1,2,1,2,0,0,2,0,0,0,0,0,0,2,0,0,2,0,2,1,1,2,0,1,1,2,0,0,2,2,0,0,2,0,2,2,1,0,1,0,2,0,0,0,0,2,0,1,2,1,0,1,2,0,2,0,2,1,0,0,0,1,2,0,1,1,2,1,1,1,0,0,0,0,0,2,2,0,2,2,2,1,2,1,1,1,2,0,2,1,0,0,0,2,2,1,0,2,0,2,0,1,0,1,0,2,0,1,1,1,1,0,2,0,1,2,1,2,0,2,1,2,1,2,2,2,2,1,2,0,0,2,0,2,2,2,0,1,2,1,0,2,0,2,2,2,0,1,1,0,2,2,2,2,0,1,2,1,2,2,1,2,0,1,2,0,0,0,2,2,1,1,0,0,2,1,1,1,0,1,2,0,1,2,0,0,1,2,0,2,0,0,2,0,2,0,1,1,1,1,1,0,2,1,1,2,2,0,0,1,2,1,2,2,1,0,2,2,2,2,2,0,1,0,0,1,1,2,0,1,2,1,2,0,0,0,2,2,2,1,2,1,1,2,0,0,0,0,1,1,1,0,1,0,2,0,1,1,2,2,0,0,1,2,0,2,2,1,2,0,0,1,0,1,2,2,0,1,2,1,2,1,2,1,2,0,1,1,1,1,1,2,0,2,2,1,2,2,1,1,0,0,1,0,2,0,1,1,1,1,2,2,0,0,1,0,1,0,2,2,2,1,0,2,2,2,0,0,2,2,1,2,2,0,2,0,2,1,0,2,0,0,1,1,1,0,2,0,0,0,1,0,2,1,2,1,2,1,0,1,2,0,2,0,1,2,2,1,0,1,2,1,2,1,0,2,2,2,1,1,1,0,0,1,1,1,1,1,1,2,1,1,1,0,0,2,0,1,2,2,0,1,2,2,2,2,0,2,1,1,2,2,2,2,1,0,1,0,2,2,0,1,0,2,2,0,0,0,0,2,0,2,1,0,1,1,2,2,1,1,2,1,2,2,0,1,1,2,0,0,0,0,2,0,0,1,2,1,2,2,2,1,0,1,1,1,1,0,0,2,0,2,1,0,2,2,1,0,0,2,1,2,2,2,1,0,2,1,0,1,2,2,0,1,2,2,0,0,2,1,2,0,1,0,1,2,1,1,0,1,1,0,0,1,2,0,1,2,2,0,1,0,0,2,2,2,2,2,0,2,0,1,1,2,2,0,0,2,0,0,2,0,1,1,0,1,0,1,2,1,1,2,0,0,0,1,1,1,1,1,2,2,1,0,1,2,2,0,1,2,2,1,1,1,2,1,1,1,2,2,2,0,0,0,0,1,1,0,0,2,2,1,2,0,2,2,0,0,1,1,0,2,1,1,1,0,2,0,0,0,0,0,1,2,1,0,0,0,0,2,2,1,0,2,2,0,1,0,0,1,2,0,0,0,1,0,2,0,2,0,0,2,2,1,1,0,0,2,0,0,2,1,0,2,1,0,1,2,2,1,0,2,0,0,0,0,2,2,2,2,0,1,1,0,1,2,0,0,0,2,0,1,1,1,1,0,0,1,2,1,1,2,2,1,0,1,1,1,1,0,2,0,1,2,2,0,2,0,2,1,1,0,1,0,2,2,2,2,1,1,2,1,1,2,0,0,2,0,0,1,0,0,2,2,0,2,1,2,2,2,2,1,0,1,2,2,1,1,1,1,1,0,1,2,0,0,2,0,0,2,2,1,1,1,0,0,0,2,0,2,0,1,2,2,0,2,2,2,0,1,0,1,2,2,2,1,0,2,1,1,2,0,1,2,2,1,0,2,2,1,2,0,1,2,1,0,2,0,0,2,2,1,1,0,2,0,0,2,2,0,1,0,1,2,0,1,0,1,2,0,0,1,1,1,0,1,1,0,2,2,2,0,1,0,1,1,0,2,1,0,1,0,0,2,0,0,1,2,0,2,1,0,1,0,0,0,0,1,0,1,0,0,2,0,2,0,0,1,1,0,0,2,0,0,2,1,2,1,2,2,1,2,1,0,1,2,0,2,0,1,2,2,0,2,2,1,1,0,0,0,0,1,0,0,1,0,0,2,1,0,1,0,1,0,2,2,2,2,2,1,2,0,1,2,2,1,0,1,2,0,1,1,0,1,2,0,1,2,0,0,2,0,0,2,2,0,0,1,2,2,0,0,1,2,2,1,1,1,2,0,2,0,2,2,1,2,1,1,2,1,1,2,2,2,2,2,0,0,1,2,1,2,0,0,2,0,0,2,1,1,1,2,0,1,2,0,1,1,0,1,1,2,0,2,2,0,1,2,2,2,0,1,2,0,2,2,0,0,1,0,0,0,0,2,0,1,0,0,2,0,0,0,2,1,0,2,0,1,1,1,0,2,0,0,1,0,2,2,1,0,0,1,1,0,1,2,1,1,2,2,2,0,1,0,2,2,2,1,1,2,2,0,1,2,0,0,1,1,2,0,1,2,1,2,1,2,2,1,2,2,0,1,1,2,0,1,0,0,2,0,0,1,0,0,0,2,1,2,2,2,0,0,1,2,0,0,2,1,1,2,0,0,2,1,1,0,0,1,2,2,0,1,2,0,1,0,2,2,1,1,1,0,0,2,2,2,2,0,1,0,2,2,1,2,1,1,1,0,2,2,1,1,2,2,0,2,1,2,2,2,1,1,2,1,0,0,1,1,0,2,1,0,2,2,2,2,0,0,0,1,0,0,0,1,1,1,0,1,0,0,0,2,1,0,2,1,0,0,2,0,2,2,1,2,0,2,1,2,2,1,2,0,0,2,2,0,0,1,0,1,2,1,1,0,2,1,0,1,2,2,2,1,1,2,0,1,1,2,1,2,0,2,1,0,2,1,2,0,0,0,0,0,2,0,2,1,0,0,0,1,2,0,0,2,1,2,0,2,1,2,0,1,1,2,0,0,1,1,0,0,2,0,1,2,1,1,0,1,0,2,2,2,2,1,2,0,2,1,2,2,1,1,1,0,1,2,2,1,2,0,0,0,2,1,1,1,0,2,0,1,0,2,0,0,2,0,2,1,1,1,2,0,1,0,0,2,2,1,0,0,0,2,2,0,2,1,1,0,1,1,2,1,2,2,0,0,1,2,2,2,2,2,1,2,0,1,2,1,0,2,2,2,2,2,1,2,1,2,0,0,1,1,2,2,1,0,1,2,0,2,0,1,2,2,1,2,1,0,0,1,2,0,1,1,0,2,2,2,0,1,2,2,1,0,1,2,1,0,2,2,2,2,0,1,0,2,0,0,0,1,1,2,2,2,0,2,2,2,0,2,1,0,2,1,2,1,2,2,1,0,1,1,2,2,0,1,2,1,2,1,2,2,0,2,0,1,1,0,2,2,2,2,1,0,1,0,0,1,1,2,1,2,1,1,2,1,1,0,2,2,1,1,2,2,1,1,2,2,1,2,2,1,2,1,2,0,1,2,1,0,2,0,2,0,0,0,2,0,0,0,1,2,2,2,2,1,0,2,0,0,1,1,0,0,0,1,0,1,2,2,0,2,1,2,1,2,2,1,0,1,0,2,2,0,2,2,1,1,0,0,1,1,0,2,2,2,0,1,0,1,0,0,1,0,2,1,2,2,0,0,2,0,0,2,0,2,1,1,1,1,0,0,1,0,1,0,1,0,2,2,1,1,2,1,2,0,2,1,0,2,2,0,2,2,0,2,2,2,0,1,2,0,2,2,2,0,1,0,0,2,2,1,1,2,1,2,2,0,2,2,2,2,0,0,0,1,0,2,0,0,2,1,2,0,2,2,2,2,2,2,1,2,0,2,2,2,2,1,1,0,0,1,2,0,2,0,2,0,2,2,0,1,2,1,2,0,2,2,1,2,1,0,0,1,2,1,0,2,2,1,1,1,2,1,1,2,1,0,2,2,0,0,0,2,1,2,2,0,1,0,0,2,1,1,1,0,1,1,2,2,1,1,0,0,1,1,0,2,0,2,1,0,0,1,2,2,1,0,2,2,1,1,0,1,0,0,0,0,1,1,1,1,1,0,2,1,0,2,2,0,2,1,1,0,2,1,1,1,2,2,2,2,2,2,1,1,1,2,0,2,2,2,1,1,1,0,2,1,2,1,0,1,1,0,0,0,2,1,2,2,1,1,2,0,1,0,2,0,0,2,2,1,0,2,1,2,0,2,2,2,2,0,0,0,1,0,2,1,1,0,2,1,2,2,1,2,2,1,0,1,2,2,0,1,0,1,2,2,1,1,1,0,0,0,1,2,2,1,2,2,0,2,2,1,0,0,2,0,1,1,2,1,0,0,0,1,2,0,0,0,0,1,1,1,2,1,2,2,1,2,2,2,1,1,2,2,2,2,1,2,0,0,0,2,0,2,1,2,0,1,1,1,0,0,2,2,1,1,0,1,0,0,1,0,1,0,2,0,2,0,1,2,2,1,2,1,1,1,0,1,0,0,2,0,1,1,2,2,2,1,1,0,1,2,2,2,0,2,2,0,1,1,1,1,1,2,0,0,2,2,2,0,0,0,1,1,2,0,2,1,0,1,1,2,1,1,2,2,2,2,2,2,0,0,2,1,2,2,2,1,2,0,0,2,1,1,0,1,0,2,0,1,2,2,0,0,0,2,0,1,0,1,2,1,0,1,2,2,1,0,0,1,1,0,2,2,0,1,2,1,1,0,1,1,2,1,2,2,1,0,2,0,2,1,0,0,2,2,1,1,0,0,1,1,0,0,2,0,0,2,0,2,0,2,1,1,2,1,0,0,0,0,2,0,0,1,1,2,0,0,2,1,1,2,0,2,1,1,1,2,1,2,1,2,0,1,2,2,2,1,2,2,1,1,2,0,2,1,0,1,2,1,1,0,2,1,2,0,1,1,0,0,0,2,1,0,1,0,0,0,1,2,0,0,1,0,0,2,2,0,2,1,0,0,1,1,2,2,2,0,1,1,0,1,0,2,0,0,0,2,0,1,0,0,0,1,0,2,2,0,1,1,1,1,0,0,2,1,2,0,0,0,1,1,2,2,0,0,0,1,2,1,0,1,1,2,1,1,0,0,2,2,2,0,1,0,0,2,1,0,1,0,0,0,2,1,2,1,0,2,0,0,1,2,2,1,2,1,2,0,0,1,1,0,1,1,1,1,2,2,1,2,0,2,1,0,0,0,2,2,2,0,1,2,1,1,0,1,2,1,0,0,0,2,0,0,1,2,2,0,0,1,0,0,1,0,2,1,0,2,2,2,0,2,1,1,2,0,1,1,1,1,1,1,1,1,0,2,0,2,2,2,2,2,0,2,1,1,0,1,0,0,1,0,0,0,2,1,2,2,2,1,0,1,0,2,2,0,0,0,1,2,0,2,2,1,1,1,0,2,2,0,2,2,0,1,2,2,0,1,1,1,1,2,2,0,2,2,2,2,1,1,0,2,1,0,0,1,1,0,0,0,0,1,0,2,1,2,0,1,0,2,1,2,2,2,2,0,2,1,0,2,0,2,0,2,2,0,0,2,0,2,1,2,2,0,0,1,2,0,1,1,2,0,0,2,0,1,0,0,2,0,1,2,2,1,0,2,2,1,0,1,1,0,1,1,1,0,0,1,0,2,0,2,2,2,2,1,0,2,2,0,2,0,0,0,2,0,0,2,0,2,1,1,2,1,1,0,1,0,1,1,2,0,2,1,0,0,0,2,0,2,0,0,2,1,0,0,0,0,0,1,0,1,1,1,1,1,1,2,0,1,2,1,0,1,0,2,2,2,2,0,2,0,0,0,1,1,0,1,1,0,2,0,2,2,1,0,1,0,1,0,0,1,1,1,1,1,2,1,0,1,2,1,2,2,0,1,0,1,2,0,1,1,2,0,0,2,0,2,0,0,1,2,2,2,0,0,2,0,1,1,2,2,0,0,2,1,1,0,1,1,0,2,0,0,2,2,0,0,2,0,1,2,1,2,0,2,1,1,1,0,2,0,0,2,2,2,2,2,1,2,0,2,1,1,2,2,2,0,0,1,0,0,2,2,2,1,1,1,2,1,2,2,2,0,1,0,0,1,1,0,1,1,2,0,2,1,1,0,1,1,1,0,0,1,1,1,0,1,1,2,0,0,0,2,2,0,0,0,0,2,1,2,1,1,1,2,1,1,0,0,0,0,2,1,2,1,0,1,2,2,0,0,0,2,2,0,0,1,0,0,1,1,2,1,2,1,0,1,1,1,1,2,1,1,2,0,1,2,1,0,2,2,2,0,0,2,2,0,0,2,1,0,0,2,2,1,2,0,0,0,0,2,1,0,1,1,0,2,1,2,1,2,1,2,1,2,2,1,2,0,2,2,2,1,1,1,2,1,2,2,2,1,1,2,1,1,2,1,2,1,2,2,0,2,2,1,2,1,2,2,2,0,0,0,1,1,0,2,1,0,1,1,2,1,0,2,1,0,1,0,0,2,2,1,2,1,0,1,1,0,1,1,2,2,0,0,2,0,0,0,2,0,2,1,1,2,2,1,0,0,2,1,0,2,2,1,1,2,1,2,2,2,2,0,1,1,1,2,0,2,0,0,1,2,0,2,2,0,2,2,0,0,2,1,2,1,1,0,2,2,2,1,2,2,0,0,0,0,2,0,1,1,2,1,1,1,2,2,1,0,1,1,1,1,0,1,1,2,1,0,2,0,2,0,1,2,2,0,1,1,2,1,2,0,2,1,0,1,0,1,2,1,2,0,2,1,2,1,0,1,1,1,0,1,0,0,2,0,0,2,2,0,0,2,0,2,2,0,0,2,2,0,2,1,2,0,1,0,2,1,1,2,1,2,0,2,1,2,1,1,2,2,1,0,1,0,1,1,1,1,0,0,0,2,0,0,0,0,0,2,1,2,0,1,1,2,0,2,2,0,2,0,1,1,1,0,0,2,1,1,2,0,1,2,0,0,2,0,0,2,0,1,2,2,2,2,2,0,1,0,2,2,1,1,2,2,2,1,0,2,2,2,2,1,0,0,2,2,1,1,1,1,1,1,2,2,0,2,2,1,1,2,0,1,0,1,2,2,0,2,2,2,0,2,1,1,1,2,0,0,0,1,2,0,1,0,1,0,1,1,2,2,1,0,0,2,0,1,2,0,0,1,2,1,1,2,2,1,0,0,0,0,2,2,0,2,0,0,1,0,2,0,2,1,1,1,0,2,2,0,0,0,1,0,1,0,1,0,2,1,2,0,1,2,2,0,0,0,0,0,0,2,0,2,1,0,2,1,1,1,2,0,1,1,2,1,0,1,2,0,2,1,2,0,0,1,1,0,1,1,2,0,2,2,0,2,1,0,0,2,2,0,2,1,2,1,1,1,1,2,2,0,1,2,2,0,2,1,1,1,2,0,0,1,0,0,0,2,1,1,0,0,0,1,0,0,2,2,0,1,1,0,2,1,2,2,0,0,2,2,0,0,2,2,0,0,1,1,1,0,0,0,1,2,0,0,0,1,0,1,2,2,2,1,1,1,1,0,2,2,1,1,1,0,2,0,2,0,2,1,2,2,1,2,1,0,1,1,2,1,2,2,1,0,1,1,0,1,2,1,0,0,0,0,0,2,1,2,0,2,0,1,0,2,1,0,0,2,0,1,2,0,2,2,1,1,1,0,0,2,0,1,1,1,1,2,0,1,1,0,0,2,0,0,1,1,0,0,0,0,1,1,1,0,1,2,1,2,1,1,2,2,2,1,1,0,2,2,0,2,2,2,0,2,0,1,1,0,1,2,1,2,1,1,2,0,0,1,2,1,1,0,1,2,1,2,2,1,2,1,1,0,2,2,1,0,2,0,1,2,1,1,2,0,1,2,2,1,2,0,1,2,1,1,2,0,2,1,1,0,2,2,2,0,2,0,1,1,0,0,1,0,1,2,2,1,1,0,1,1,1,1,1,2,2,0,2,1,1,1,1,0,1,0,1,1,0,0,1,0,1,2,2,1,2,0,1,2,1,0,0,0,1,0,0,1,2,1,1,0,2,0,0,0,0,0,1,0,1,2,1,2,2,2,0,2,1,1,2,2,1,0,1,0,0,1,1,2,1,2,0,1,2,2,2,0,2,2,0,0,2,1,2,1,2,1,0,2,2,0,0,1,0,1,1,0,0,0,0,0,2,2,2,0,1,2,0,1,1,2,1,0,1,2,0,2,2,2,1,2,2,1,1,2,0,2,1,1,0,2,1,1,1,2,1,2,1,1,2,1,2,2,1,0,0,2,0,0,1,0,2,0,2,0,2,1,0,1,2,1,0,1,2,1,1,0,2,2,1,2,1,1,0,2,2,2,2,0,2,1,0,2,1,2,2,0,1,1,1,0,1,2,1,2,0,1,2,2,0,2,2,2,0,1,1,0,2,1,0,0,2,1,0,1,0,0,1,1,1,1,2,0,1,0,1,1,2,2,2,0,0,2,1,1,1,2,2,0,0,0,0,2,0,1,1,1,2,0,0,1,1,1,2,0,0,1,0,2,0,0,2,2,1,2,1,1,2,2,2,2,1,2,2,1,2,1,1,0,1,1,1,1,2,1,1,2,2,2,1,1,1,0,0,0,0,0,1,1,2,1,1,0,1,1,2,2,0,1,2,2,1,2,1,0,1,2,1,0,2,1,1,1,2,2,1,1,0,0,0,1,1,2,1,0,2,1,0,1,2,1,1,1,1,2,2,0,2,1,1,1,1,2,0,0,1,1,2,1,2,0,2,1,0,0,0,0,1,2,0,1,2,0,0,1,1,1,2,2,2,2,2,1,2,0,0,1,0,0,2,0,1,0,2,0,1,2,1,1,1,1,2,0,2,0,2,0,0,1,2,2,1,1,1,1,1,2,1,2,0,0,2,1,2,1,1,1,2,2,2,1,2,0,2,1,2,1,2,1,2,1,2,2,2,2,1,1,2,0,0,0,2,0,2,2,0,1,0,1,2,1,1,0,0,1,1,2,2,0,1,1,2,2,1,2,0,1,2,1,0,2,2,1,0,1,0,1,1,0,2,2,2,1,2,0,2,2,2,2,2,1,0,1,1,2,1,2,1,2,0,0,0,0,2,0,2,2,1,1,1,1,2,2,0,0,0,2,0,2,1,0,0,1,0,1,2,1,0,1,0,2,0,2,0,0,2,2,0,0,1,2,1,0,1,0,2,1,0,2,2,2,2,2,2,0,0,1,2,2,2,2,0,1,0,2,1,2,2,2,0,2,2,2,1,1,2,2,1,0,0,1,1,2,1,0,0,0,0,0,2,0,0,0,1,0,2,0,2,2,1,2,2,2,0,0,2,1,1,2,1,2,2,0,0,2,2,2,2,0,0,0,0,0,0,2,0,2,2,1,0,0,1,0,2,2,1,0,2,2,0,1,0,2,1,0,0,2,0,0,2,1,2,2,2,0,0,1,0,0,2,0,2,1,2,2,2,1,1,1,2,1,2,2,2,2,0,1,0,2,1,2,0,2,1,0,2,0,1,1,0,1,1,2,2,0,0,2,1,0,2,0,2,1,2,2,1,2,1,2,1,2,2,2,0,2,1,2,2,1,0,2,0,0,1,0,2,0,1,1,1,2,2,2,2,2,0,1,1,1,1,2,1,0,0,2,2,1,2,2,2,0,1,2,1,1,1,2,2,0,1,1,2,2,0,0,0,0,0,2,1,0,1,0,0,0,0,1,2,1,1,0,2,1,2,1,0,0,0,0,1,2,1,0,0,0,0,1,2,0,0,1,2,2,1,2,2,2,2,0,0,0,2,0,0,2,0,2,1,1,1,0,0,0,2,1,0,2,1,0,2,0,2,2,0,0,0,0,2,1,1,1,0,1,2,2,1,0,0,0,1,1,0,0,1,0,2,1,2,1,1,2,2,2,2,2,2,1,0,2,2,2,1,2,1,2,1,0,2,1,0,1,1,1,1,0,0,2,1,0,1,0,1,0,1,1,1,1,1,2,0,0,2,0,1,1,0,1,1,1,2,1,0,0,1,2,0,1,1,0,2,1,1,2,1,0,1,2,0,1,1,0,1,1,0,2,2,1,0,1,1,0,0,0,2,2,2,1,0,2,0,1,0,2,2,1,2,0,0,1,2,1,0,1,0,1,2,2,2,2,1,2,1,0,2,1,2,2,2,2,2,0,2,2,0,1,1,2,2,2,0,2,2,2,0,0,2,1,1,1,0,0,1,0,0,2,1,1,1,0,1,0,0,0,2,0,0,1,1,1,2,0,1,1,0,1,2,0,1,2,0,2,2,2,1,0,2,2,2,1,0,0,2,2,2,0,2,0,2,1,1,0,1,0,0,1,2,1,1,2,1,1,0,2,0,0,1,1,0,2,1,2,1,1,1,2,0,2,1,0,1,0,1,0,1,0,1,2,0,1,0,0,2,2,1,2,0,0,2,1,2,1,2,2,0,1,1,0,1,1,2,0,0,1,2,0,0,0,2,0,2,2,0,0,2,1,2,2,2,0,0,1,1,2,2,0,1,0,1,0,0,0,0,0,1,0,0,0,1,1,0,2,2,1,0,1,1,1,1,2,0,0,1,0,2,1,0,2,1,1,0,1,1,0,1,2,2,0,0,1,1,2,0,2,1,0,2,2,0,2,1,0,0,1,0,0,1,0,2,0,2,0,0,1,0,0,1,2,0,1,1,1,2,0,0,0,0,2,2,2,0,1,0,1,1,0,0,2,2,0,2,0,1,2,1,1,1,0,1,0,2,0,1,2,0,2,2,0,1,1,1,2,1,1,0,1,2,2,0,1,0,1,0,1,2,1,1,0,0,2,1,2,2,2,0,1,2,0,2,1,1,0,2,1,2,1,2,0,2,0,0,1,0,1,0,1,1,0,1,0,0,1,2,2,2,2,2,2,2,1,2,2,1,2,0,1,0,0,0,1,0,2,2,1,0,1,1,0,2,2,1,0,2,2,1,1,0,0,0,1,2,2,1,2,0,2,0,1,0,2,2,0,0,2,0,1,2,2,1,1,2,2,1,1,1,2,0,0,0,0,2,0,0,1,1,2,1,1,1,1,0,0,1,1,1,0,2,0,0,1,1,2,2,2,0,0,1,0,0,2,1,2,1,2,0,1,2,2,0,2,1,1,0,0,0,2,0,2,0,1,2,0,1,2,1,0,1,1,0,0,0,1,2,1,0,2,0,2,0,0,1,1,0,0,0,1,1,0,1,2,1,0,2,1,1,0,1,1,2,1,1,1,0,2,2,2,1,0,1,0,1,2,1,2,1,2,0,0,2,2,1,0,2,2,2,2,2,0,1,0,1,1,2,1,1,2,1,1,1,2,1,1,2,1,0,0,2,2,0,0,1,1,2,1,1,0,0,0,2,0,2,2,1,0,2,0,0,1,2,1,2,2,1,2,0,0,2,0,0,0,2,2,1,0,1,2,2,1,1,1,1,1,1,1,1,2,1,0,2,0,0,0,0,1,0,0,1,2,1,2,2,2,0,2,2,0,1,2,0,1,0,2,0,2,1,1,1,0,2,1,2,1,2,0,1,0,2,2,2,0,1,1,1,2,2,2,0,1,0,2,2,2,2,0,0,0,2,1,2,2,1,2,0,1,1,1,0,0,1,1,1,2,1,1,2,2,2,0,0,0,2,2,1,1,0,2,1,2,1,1,2,1,1,2,0,1,1,1,1,2,2,2,2,2,1,1,0,0,2,1,2,0,2,2,1,1,1,2,2,0,1,2,0,0,0,0,0,2,0,2,2,1,2,0,2,1,0,1,2,2,2,0,2,2,2,2,1,2,1,2,2,0,0,2,2,0,1,2,0,2,1,0,2,1,1,2,1,2,2,1,2,2,2,0,1,1,0,0,1,0,2,2,0,1,2,1,0,2,2,0,1,0,2,2,1,1,0,2,1,1,2,2,1,2,2,1,0,1,2,0,1,1,1,0,2,0,0,2,2,0,2,1,0,2,0,1,0,0,1,0,1,0,2,2,1,1,0,1,0,1,0,1,2,2,2,2,1,2,1,0,0,2,1,0,0,0,1,2,2,0,1,1,2,2,0,1,0,0,1,0,1,1,1,2,0,2,0,0,1,1,1,0,1,1,2,2,2,1,0,0,2,2,0,2,2,1,2,0,0,2,2,0,0,2,2,0,0,1,0,2,1,0,1,1,0,2,0,0,0,0,2,1,1,2,0,0,2,1,0,0,1,2,1,1,0,0,0,2,2,2,1,2,1,0,1,1,1,0,1,0,0,2,0,0,1,0,2,2,2,2,2,1,1,0,0,0,1,1,0,2,1,1,1,2,1,0,0,1,0,2,2,2,0,1,1,0,1,1,2,0,1,2,1,0,2,1,0,0,2,1,0,2,1,2,2,1,2,0,2,2,0,0,1,0,2,2,1,2,1,2,2,1,1,0,0,2,2,1,1,2,2,1,2,0,0,0,2,2,2,0,1,0,2,1,2,2,2,2,2,1,0,1,0,1,0,0,0,1,1,0,2,1,2,0,1,0,1,1,0,0,1,1,0,2,0,0,1,1,2,0,2,1,0,0,2,0,1,2,0,0,0,1,1,0,2,0,2,0,2,0,0,1,1,0,0,0,2,0,2,1,0,1,0,1,0,1,2,1,1,0,0,1,2,1,0,2,0,1,1,1,2,2,2,2,0,1,0,0,1,2,2,2,2,1,0,0,0,2,2,1,1,1,2,0,1,0,0,1,1,1,1,1,2,0,2,1,1,2,2,1,1,2,2,2,0,2,2,2,1,1,2,1,1,0,1,2,0,1,2,0,2,0,2,2,0,2,1,0,2,0,1,1,0,2,1,1,2,0,1,1,1,2,1,2,1,2,2,1,1,0,0,2,2,1,2,0,1,1,2,1,1,1,1,0,1,0,2,0,1,1,1,0,0,0,1,1,1,1,0,0,2,1,2,2,1,1,2,1,0,1,2,1,1,1,1,0,0,1,0,0,0,0,0,1,0,1,1,0,2,0,2,1,1,0,2,2,2,0,2,1,2,2,1,1,1,1,1,0,0,0,1,2,2,2,0,0,0,0,2,1,0,1,0,2,1,0,1,0,1,2,0,1,0,2,1,1,1,0,2,1,2,0,1,1,1,0,0,0,0,2,0,0,2,0,2,1,0,1,0,0,0,1,1,0,2,1,2,1,2,2,0,1,2,0,2,1,1,0,1,1,1,2,0,0,1,2,1,2,0,1,2,1,2,0,1,2,1,0,1,2,1,0,1,1,1,0,1,1,2,0,1,0,0,1,1,1,1,1,0,2,2,0,2,2,0,1,1,2,1,2,0,2,1,0,2,1,1,1,2,0,0,2,1,2,2,2,2,2,1,0,2,2,0,1,1,0,2,2,1,1,0,2,1,2,0,0,2,1,1,2,0,0,0,0,2,2,0,1,1,0,2,2,1,2,1,1,0,2,2,0,1,2,1,2,1,0,1,1,0,0,2,2,2,0,0,2,2,0,0,0,0,0,0,1,1,0,2,0,0,2,0,2,0,0,0,2,1,2,2,1,0,2,2,1,2,2,0,2,0,1,0,0,1,2,1,0,1,0,0,1,0,0,0,1,1,1,2,2,2,1,0,2,2,2,0,2,1,2,1,2,0,1,1,0,0,0,2,2,1,1,1,2,0,2,1,1,1,0,0,1,2,2,0,0,0,1,1,2,1,2,0,2,1,2,2], 25000000)
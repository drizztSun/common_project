# To verify the jws token

# Header:
# {
#  "x5c": [
#    "MIIFFjCCAv6gAwIBAgIJ<snip-for-email>em/yCmhoyb7n6Xptg=="
#  ],
#  "alg": "RS256",
#  "typ": "JWT"
# }
 
#Payload:
#{
#  "iss": "https://etpcas.akamai.com",
#  "iat": 1565970443,
#  "sub": "3a2bd56f-ac78-4fda-afe2-be9b6188fb2f",
#  "exp": 1565974043
#}

# JWS string
# eyJ4NWMiOlsiTUlJRkZqQ0NBdjZnQXdJQkFnSUpBSlFSN3h0ek9hbmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR2ZNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ0F3TlRXRnpjMkZqYUhWelpYUjBjekVTTUJBR0ExVUVCd3dKUTJGdFluSnBaR2RsTVJ3d0dnWURWUVFLREJOQmEyRnRZV2tnVkdWamFHNXZiRzluYVdWek1Rd3dDZ1lEVlFRTERBTkxUVWt4R1RBWEJnTlZCQU1NRUVWQlFTQkVaWFpwWTJVZ1EwRWdSekV4SFRBYkJna3Foa2lHOXcwQkNRRVdEbXR0YVVCaGEyRnRZV2t1WTI5dE1CNFhEVEU1TURneE5URXhNamMwTlZvWERUSXdNRGd4TlRFeE1qYzBOVm93Z2FVeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUlEQTFOWVhOellXTm9kWE5sZEhSek1SSXdFQVlEVlFRSERBbERZVzFpY21sa1oyVXhIREFhQmdOVkJBb01FMEZyWVcxaGFTQlVaV05vYm05c2IyZHBaWE14RERBS0JnTlZCQXNNQTB0TlNURWZNQjBHQTFVRUF3d1dSVUZCSUVSbGRtbGpaU0JEWlhKMGFXWnBZMkYwWlRFZE1Cc0dDU3FHU0liM0RRRUpBUllPYTIxcFFHRnJZVzFoYVM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFET0lhZXhrWE5qdU5zdWFibDQxZml3eG9jQVNST3Y0SVJFZVd0aGJJT1VEcVdPaytxdzlzSFB0ZWxNdGFVc055emx0MlRmaTVlNlBGMXhUZXdrQnk3QUVGTE8vZEQwS2hvd1ZHbTdFendyYjNrQ2VROEI3Rld6ZGFCQis0c25nbk9ZVk9UQ3ZOMWFFTnYwQlZtTWVBN2NkbjlCMlpVTkhaaGRobytZRmNQQ3VWWGJoZm9zYWRnM2xMQlluOWhuSVlyLzJNK01samtwbkJPN2xMTlBNVmtoRGxMZU9lY0llaEgzdmJiSStZeDIxRU1ISmVFSytsNlorbnV1WXZWR0diNlV4M3Q1NVFRU1NJZElWWG5KQi9ocWVaRlhib2dMcWdUT0VOVS9PR3d1Y2hJRlJYd1NwelpMZzdRL2dWZStiSmx3VE5aUnZUQitIN0prZFM0NWlwdDFBZ01CQUFHalRUQkxNQWtHQTFVZEV3UUNNQUF3SFFZRFZSME9CQllFRk9KU3p1WXVHQ053MktZenlCNmlGcFAvbC9WeE1COEdBMVVkSXdRWU1CYUFGTnQrSHg3dnNVdXU4dElHWm1aekVuVXFBSUlyTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFBV2JvVWQ5eHp1NGVxQndrbmFhVkVZUkUyZHQ5Q2hPSkZhMEtBcGREUHF1d3ZodW5NRDVPUzBEcFl1VHhRWTZpYnRnTjBRVi9pL2MvaVRENk9ZeFNnbXJDdnp5L1AwYk94NlZ3RFBpVi9Ka1BMUjU0NzlwbjNyZVplb0pNMWw4VmVyMm51VWp0dFpIRFlNTWE0TFIzdnJrUEhpK1o5S1QvRjVyU1E4aHZRNGRSQXIyUEduQjltQzY3S3IxZldaR2VHbDNCZnlIRWY2M2gwWm1OWHVQakthSml5eTdYODAxbzVheTBWRlNQV3VsZlBGemlzNkdLNmdNVFYwQ00vTCtQK3U3dFZoTnBkaE5CVzRoSnRDMmswbWlSZ2RORXJqMlBjOGJITmkxRko0RnZydnF6elZuUUVxYWYybnVhWWNndDBETVh6K3YvdFlkN2tPbENBVFEwNUloL09EYTJxMnUvRU9xUFNTUFJwSThiSlQrN0RyUGpXTTB5K0ZQOHhEdWt3MUNYLzM2WHZERUhuZWd2ZWlJZiszQWNIZjMxZE4rRnV5VHR0cnFZckVmSHVGbWlRbm1vUFF2U21GOUlLMHRhcTM2UUJyYUNKaDBUZ0RjZGV1Nmg3Tm9ZVVJsRXF5dG56blk3RXRuMk0wTUx3UG5qWDZkV0Y2VWFWUnBLMGFKUzNSait6SC9RMVB6WlNIanBSUDd5YnJsZDA0SWZVREVuVG9wdmFqVTZ1ZjdTbUtpRTFPTFJ0S05VaWt4N3ZMREVCQ1RpV1JIcXdud0ZKcG5Vc3pBNlJ6bXhFRkxQVUsvM2w0Zjl0MHkvbk9MQ0FHc3NyREZ1WUVya09mYzhWRlltMzVKeEZmNWtDa3lTbTM0NUtpL3dlVk5UemxFZW0veUNtaG95YjduNlhwdGc9PSJdLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2V0cGNhcy5ha2FtYWkuY29tIiwiaWF0IjoxNTY1OTcwNDQzLCJzdWIiOiIzYTJiZDU2Zi1hYzc4LTRmZGEtYWZlMi1iZTliNjE4OGZiMmYiLCJleHAiOjE1NjU5NzQwNDN9.mb2iOsillWacFiFPg7sb3Wf6t41rM_WOXHCMyMBRVi8DKTVa9bbl2xHHG4M8waSESfOUVhqoqvALn80bHcGbtknIKy8rqjaJjRBzrv5TH3WXjVzOMbqbbn42GDpiDnsBr4h0g1Zfz64msc7QySy2VG8CWowSFoypn71uZ_naIBRUk8GQ5R6N5-7Mxf55zc29U0sHyXbfwTKSeUjKzZBQxtHKbTlPmq1r1JKVrDdS-tfOuXFY9V6SlIzxlWPq6puPtz7Lrjxwwhb9rPHKTKcKZ6oqcRjaUSVClORuchpSgfzCzeINazt6--HtUHyCoQU4S-_9X2ZSulIJ-9ZmoDbrqg

# base64URLDecoding result at below. 

# {"x5c":
#   ["MIIFFjCCAv6gAwIBAgIJAJQR7xtzOanlMA0GCSqGSIb3DQEBCwUAMIGfMQswCQYDVQQGEwJVUzEWMBQGA1UECAwNTWFzc2FjaHVzZXR0czESMBAGA1UEBwwJQ2FtYnJpZGdlMRwwGgYDVQQKDBNBa2FtYWkgVGVjaG5vbG9naWVzMQwwCgYDVQQLDANLTUkxGTAXBgNVBAMMEEVBQSBEZXZpY2UgQ0EgRzExHTAbBgkqhkiG9w0BCQEWDmttaUBha2FtYWkuY29tMB4XDTE5MDgxNTExMjc0NVoXDTIwMDgxNTExMjc0NVowgaUxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNzYWNodXNldHRzMRIwEAYDVQQHDAlDYW1icmlkZ2UxHDAaBgNVBAoME0FrYW1haSBUZWNobm9sb2dpZXMxDDAKBgNVBAsMA0tNSTEfMB0GA1UEAwwWRUFBIERldmljZSBDZXJ0aWZpY2F0ZTEdMBsGCSqGSIb3DQEJARYOa21pQGFrYW1haS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOIaexkXNjuNsuabl41fiwxocASROv4IREeWthbIOUDqWOk+qw9sHPtelMtaUsNyzlt2Tfi5e6PF1xTewkBy7AEFLO/dD0KhowVGm7Ezwrb3kCeQ8B7FWzdaBB+4sngnOYVOTCvN1aENv0BVmMeA7cdn9B2ZUNHZhdho+YFcPCuVXbhfosadg3lLBYn9hnIYr/2M+MljkpnBO7lLNPMVkhDlLeOecIehH3vbbI+Yx21EMHJeEK+l6Z+nuuYvVGGb6Ux3t55QQSSIdIVXnJB/hqeZFXbogLqgTOENU/OGwuchIFRXwSpzZLg7Q/gVe+bJlwTNZRvTB+H7JkdS45ipt1AgMBAAGjTTBLMAkGA1UdEwQCMAAwHQYDVR0OBBYEFOJSzuYuGCNw2KYzyB6iFpP/l/VxMB8GA1UdIwQYMBaAFNt+Hx7vsUuu8tIGZmZzEnUqAIIrMA0GCSqGSIb3DQEBCwUAA4ICAQAWboUd9xzu4eqBwknaaVEYRE2dt9ChOJFa0KApdDPquwvhunMD5OS0DpYuTxQY6ibtgN0QV/i/c/iTD6OYxSgmrCvzy/P0bOx6VwDPiV/JkPLR5479pn3reZeoJM1l8Ver2nuUjttZHDYMMa4LR3vrkPHi+Z9KT/F5rSQ8hvQ4dRAr2PGnB9mC67Kr1fWZGeGl3BfyHEf63h0ZmNXuPjKaJiyy7X801o5ay0VFSPWulfPFzis6GK6gMTV0CM/L+P+u7tVhNpdhNBW4hJtC2k0miRgdNErj2Pc8bHNi1FJ4FvrvqzzVnQEqaf2nuaYcgt0DMXz+v/tYd7kOlCATQ05Ih/ODa2q2u/EOqPSSPRpI8bJT+7DrPjWM0y+FP8xDukw1CX/36XvDEHnegveiIf+3AcHf31dN+FuyTttrqYrEfHuFmiQnmoPQvSmF9IK0taq36QBraCJh0TgDcdeu6h7NoYURlEqytnznY7Etn2M0MLwPnjX6dWF6UaVRpK0aJS3Rj+zH/Q1PzZSHjpRP7ybrld04IfUDEnTopvajU6uf7SmKiE1OLRtKNUikx7vLDEBCTiWRHqwnwFJpnUszA6RzmxEFLPUK/3l4f9t0y/nOLCAGssrDFuYErkOfc8VFYm35JxFf5kCkySm345Ki/weVNTzlEem/yCmhoyb7n6Xptg=="],
#    "alg":"RS256",
#    "typ":"JWT"
# }
# {
#   "iss":"https://etpcas.akamai.com",
#   "iat":1565970443,
#   "sub":"3a2bd56f-ac78-4fda-afe2-be9b6188fb2f",
#   "exp":1565974043

import json
from jsonschema import validate
import base64
import jwt
from cryptography import x509
#from cryptography.hazmat.backends import default_baimckend
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import rsa

import cert_cryptography
#from cert_cryptography import output_cert_Info
from cert_pyopenssl import CertUtil

# publickey = b'-----BEGIN CERTIFICATE-----MIIFFjCCAv6gAwIBAgIJAJQR7xtzOanlMA0GCSqGSIb3DQEBCwUAMIGfMQswCQYDVQQGEwJVUzEWMBQGA1UECAwNTWFzc2FjaHVzZXR0czESMBAGA1UEBwwJQ2FtYnJpZGdlMRwwGgYDVQQKDBNBa2FtYWkgVGVjaG5vbG9naWVzMQwwCgYDVQQLDANLTUkxGTAXBgNVBAMMEEVBQSBEZXZpY2UgQ0EgRzExHTAbBgkqhkiG9w0BCQEWDmttaUBha2FtYWkuY29tMB4XDTE5MDgxNTExMjc0NVoXDTIwMDgxNTExMjc0NVowgaUxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNzYWNodXNldHRzMRIwEAYDVQQHDAlDYW1icmlkZ2UxHDAaBgNVBAoME0FrYW1haSBUZWNobm9sb2dpZXMxDDAKBgNVBAsMA0tNSTEfMB0GA1UEAwwWRUFBIERldmljZSBDZXJ0aWZpY2F0ZTEdMBsGCSqGSIb3DQEJARYOa21pQGFrYW1haS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOIaexkXNjuNsuabl41fiwxocASROv4IREeWthbIOUDqWOk+qw9sHPtelMtaUsNyzlt2Tfi5e6PF1xTewkBy7AEFLO/dD0KhowVGm7Ezwrb3kCeQ8B7FWzdaBB+4sngnOYVOTCvN1aENv0BVmMeA7cdn9B2ZUNHZhdho+YFcPCuVXbhfosadg3lLBYn9hnIYr/2M+MljkpnBO7lLNPMVkhDlLeOecIehH3vbbI+Yx21EMHJeEK+l6Z+nuuYvVGGb6Ux3t55QQSSIdIVXnJB/hqeZFXbogLqgTOENU/OGwuchIFRXwSpzZLg7Q/gVe+bJlwTNZRvTB+H7JkdS45ipt1AgMBAAGjTTBLMAkGA1UdEwQCMAAwHQYDVR0OBBYEFOJSzuYuGCNw2KYzyB6iFpP/l/VxMB8GA1UdIwQYMBaAFNt+Hx7vsUuu8tIGZmZzEnUqAIIrMA0GCSqGSIb3DQEBCwUAA4ICAQAWboUd9xzu4eqBwknaaVEYRE2dt9ChOJFa0KApdDPquwvhunMD5OS0DpYuTxQY6ibtgN0QV/i/c/iTD6OYxSgmrCvzy/P0bOx6VwDPiV/JkPLR5479pn3reZeoJM1l8Ver2nuUjttZHDYMMa4LR3vrkPHi+Z9KT/F5rSQ8hvQ4dRAr2PGnB9mC67Kr1fWZGeGl3BfyHEf63h0ZmNXuPjKaJiyy7X801o5ay0VFSPWulfPFzis6GK6gMTV0CM/L+P+u7tVhNpdhNBW4hJtC2k0miRgdNErj2Pc8bHNi1FJ4FvrvqzzVnQEqaf2nuaYcgt0DMXz+v/tYd7kOlCATQ05Ih/ODa2q2u/EOqPSSPRpI8bJT+7DrPjWM0y+FP8xDukw1CX/36XvDEHnegveiIf+3AcHf31dN+FuyTttrqYrEfHuFmiQnmoPQvSmF9IK0taq36QBraCJh0TgDcdeu6h7NoYURlEqytnznY7Etn2M0MLwPnjX6dWF6UaVRpK0aJS3Rj+zH/Q1PzZSHjpRP7ybrld04IfUDEnTopvajU6uf7SmKiE1OLRtKNUikx7vLDEBCTiWRHqwnwFJpnUszA6RzmxEFLPUK/3l4f9t0y/nOLCAGssrDFuYErkOfc8VFYm35JxFf5kCkySm345Ki/weVNTzlEem/yCmhoyb7n6Xptg==-----END CERTIFICATE-----'

# Der format certificate is base64 encoding certificate
publickey = b'MIIFFjCCAv6gAwIBAgIJAJQR7xtzOanlMA0GCSqGSIb3DQEBCwUAMIGfMQswCQYDVQQGEwJVUzEWMBQGA1UECAwNTWFzc2FjaHVzZXR0czESMBAGA1UEBwwJQ2FtYnJpZGdlMRwwGgYDVQQKDBNBa2FtYWkgVGVjaG5vbG9naWVzMQwwCgYDVQQLDANLTUkxGTAXBgNVBAMMEEVBQSBEZXZpY2UgQ0EgRzExHTAbBgkqhkiG9w0BCQEWDmttaUBha2FtYWkuY29tMB4XDTE5MDgxNTExMjc0NVoXDTIwMDgxNTExMjc0NVowgaUxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNzYWNodXNldHRzMRIwEAYDVQQHDAlDYW1icmlkZ2UxHDAaBgNVBAoME0FrYW1haSBUZWNobm9sb2dpZXMxDDAKBgNVBAsMA0tNSTEfMB0GA1UEAwwWRUFBIERldmljZSBDZXJ0aWZpY2F0ZTEdMBsGCSqGSIb3DQEJARYOa21pQGFrYW1haS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOIaexkXNjuNsuabl41fiwxocASROv4IREeWthbIOUDqWOk+qw9sHPtelMtaUsNyzlt2Tfi5e6PF1xTewkBy7AEFLO/dD0KhowVGm7Ezwrb3kCeQ8B7FWzdaBB+4sngnOYVOTCvN1aENv0BVmMeA7cdn9B2ZUNHZhdho+YFcPCuVXbhfosadg3lLBYn9hnIYr/2M+MljkpnBO7lLNPMVkhDlLeOecIehH3vbbI+Yx21EMHJeEK+l6Z+nuuYvVGGb6Ux3t55QQSSIdIVXnJB/hqeZFXbogLqgTOENU/OGwuchIFRXwSpzZLg7Q/gVe+bJlwTNZRvTB+H7JkdS45ipt1AgMBAAGjTTBLMAkGA1UdEwQCMAAwHQYDVR0OBBYEFOJSzuYuGCNw2KYzyB6iFpP/l/VxMB8GA1UdIwQYMBaAFNt+Hx7vsUuu8tIGZmZzEnUqAIIrMA0GCSqGSIb3DQEBCwUAA4ICAQAWboUd9xzu4eqBwknaaVEYRE2dt9ChOJFa0KApdDPquwvhunMD5OS0DpYuTxQY6ibtgN0QV/i/c/iTD6OYxSgmrCvzy/P0bOx6VwDPiV/JkPLR5479pn3reZeoJM1l8Ver2nuUjttZHDYMMa4LR3vrkPHi+Z9KT/F5rSQ8hvQ4dRAr2PGnB9mC67Kr1fWZGeGl3BfyHEf63h0ZmNXuPjKaJiyy7X801o5ay0VFSPWulfPFzis6GK6gMTV0CM/L+P+u7tVhNpdhNBW4hJtC2k0miRgdNErj2Pc8bHNi1FJ4FvrvqzzVnQEqaf2nuaYcgt0DMXz+v/tYd7kOlCATQ05Ih/ODa2q2u/EOqPSSPRpI8bJT+7DrPjWM0y+FP8xDukw1CX/36XvDEHnegveiIf+3AcHf31dN+FuyTttrqYrEfHuFmiQnmoPQvSmF9IK0taq36QBraCJh0TgDcdeu6h7NoYURlEqytnznY7Etn2M0MLwPnjX6dWF6UaVRpK0aJS3Rj+zH/Q1PzZSHjpRP7ybrld04IfUDEnTopvajU6uf7SmKiE1OLRtKNUikx7vLDEBCTiWRHqwnwFJpnUszA6RzmxEFLPUK/3l4f9t0y/nOLCAGssrDFuYErkOfc8VFYm35JxFf5kCkySm345Ki/weVNTzlEem/yCmhoyb7n6Xptg=='

privatekey = """-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAnzyis1ZjfNB0bBgKFMSvvkTtwlvBsaJq7S5wA+kzeVOVpVWw
kWdVha4s38XM/pa/yr47av7+z3VTmvDRyAHcaT92whREFpLv9cj5lTeJSibyr/Mr
m/YtjCZVWgaOYIhwrXwKLqPr/11inWsAkfIytvHWTxZYEcXLgAXFuUuaS3uF9gEi
NQwzGTU1v0FqkqTBr4B8nW3HCN47XUu0t8Y0e+lf4s4OxQawWD79J9/5d3Ry0vbV
3Am1FtGJiJvOwRsIfVChDpYStTcHTCMqtvWbV6L11BWkpzGXSW4Hv43qa+GSYOD2
QU68Mb59oSk2OB+BtOLpJofmbGEGgvmwyCI9MwIDAQABAoIBACiARq2wkltjtcjs
kFvZ7w1JAORHbEufEO1Eu27zOIlqbgyAcAl7q+/1bip4Z/x1IVES84/yTaM8p0go
amMhvgry/mS8vNi1BN2SAZEnb/7xSxbflb70bX9RHLJqKnp5GZe2jexw+wyXlwaM
+bclUCrh9e1ltH7IvUrRrQnFJfh+is1fRon9Co9Li0GwoN0x0byrrngU8Ak3Y6D9
D8GjQA4Elm94ST3izJv8iCOLSDBmzsPsXfcCUZfmTfZ5DbUDMbMxRnSo3nQeoKGC
0Lj9FkWcfmLcpGlSXTO+Ww1L7EGq+PT3NtRae1FZPwjddQ1/4V905kyQFLamAA5Y
lSpE2wkCgYEAy1OPLQcZt4NQnQzPz2SBJqQN2P5u3vXl+zNVKP8w4eBv0vWuJJF+
hkGNnSxXQrTkvDOIUddSKOzHHgSg4nY6K02ecyT0PPm/UZvtRpWrnBjcEVtHEJNp
bU9pLD5iZ0J9sbzPU/LxPmuAP2Bs8JmTn6aFRspFrP7W0s1Nmk2jsm0CgYEAyH0X
+jpoqxj4efZfkUrg5GbSEhf+dZglf0tTOA5bVg8IYwtmNk/pniLG/zI7c+GlTc9B
BwfMr59EzBq/eFMI7+LgXaVUsM/sS4Ry+yeK6SJx/otIMWtDfqxsLD8CPMCRvecC
2Pip4uSgrl0MOebl9XKp57GoaUWRWRHqwV4Y6h8CgYAZhI4mh4qZtnhKjY4TKDjx
QYufXSdLAi9v3FxmvchDwOgn4L+PRVdMwDNms2bsL0m5uPn104EzM6w1vzz1zwKz
5pTpPI0OjgWN13Tq8+PKvm/4Ga2MjgOgPWQkslulO/oMcXbPwWC3hcRdr9tcQtn9
Imf9n2spL/6EDFId+Hp/7QKBgAqlWdiXsWckdE1Fn91/NGHsc8syKvjjk1onDcw0
NvVi5vcba9oGdElJX3e9mxqUKMrw7msJJv1MX8LWyMQC5L6YNYHDfbPF1q5L4i8j
8mRex97UVokJQRRA452V2vCO6S5ETgpnad36de3MUxHgCOX3qL382Qx9/THVmbma
3YfRAoGAUxL/Eu5yvMK8SAt/dJK6FedngcM3JEFNplmtLYVLWhkIlNRGDwkg3I5K
y18Ae9n7dHVueyslrb6weq7dTkYDi3iOYRW8HRkIQh06wEdbxt0shTzAJvvCQfrB
jg/3747WSsf/zBTcHihTRBdAv6OmdhV4/dD5YBfLAkLrd+mX7iE=
-----END RSA PRIVATE KEY-----
"""

# PEM
device_root_cert = """-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----"""


device_root_cert_2 = b"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"

device_root_cert_1 = "-----BEGIN CERTIFICATE-----\n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\n-----END CERTIFICATE-----"


def test_decoding(token):
    # publicCert = b‘MIIFFjCCAv6gAwIBAgIJAJQR7xtzOanlMA0GCSqGSIb3DQEBCwUAMIGfMQswCQYDVQQGEwJVUzEWMBQGA1UECAwNTWFzc2FjaHVzZXR0czESMBAGA1UEBwwJQ2FtYnJpZGdlMRwwGgYDVQQKDBNBa2FtYWkgVGVjaG5vbG9naWVzMQwwCgYDVQQLDANLTUkxGTAXBgNVBAMMEEVBQSBEZXZpY2UgQ0EgRzExHTAbBgkqhkiG9w0BCQEWDmttaUBha2FtYWkuY29tMB4XDTE5MDgxNTExMjc0NVoXDTIwMDgxNTExMjc0NVowgaUxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNzYWNodXNldHRzMRIwEAYDVQQHDAlDYW1icmlkZ2UxHDAaBgNVBAoME0FrYW1haSBUZWNobm9sb2dpZXMxDDAKBgNVBAsMA0tNSTEfMB0GA1UEAwwWRUFBIERldmljZSBDZXJ0aWZpY2F0ZTEdMBsGCSqGSIb3DQEJARYOa21pQGFrYW1haS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOIaexkXNjuNsuabl41fiwxocASROv4IREeWthbIOUDqWOk+qw9sHPtelMtaUsNyzlt2Tfi5e6PF1xTewkBy7AEFLO/dD0KhowVGm7Ezwrb3kCeQ8B7FWzdaBB+4sngnOYVOTCvN1aENv0BVmMeA7cdn9B2ZUNHZhdho+YFcPCuVXbhfosadg3lLBYn9hnIYr/2M+MljkpnBO7lLNPMVkhDlLeOecIehH3vbbI+Yx21EMHJeEK+l6Z+nuuYvVGGb6Ux3t55QQSSIdIVXnJB/hqeZFXbogLqgTOENU/OGwuchIFRXwSpzZLg7Q/gVe+bJlwTNZRvTB+H7JkdS45ipt1AgMBAAGjTTBLMAkGA1UdEwQCMAAwHQYDVR0OBBYEFOJSzuYuGCNw2KYzyB6iFpP/l/VxMB8GA1UdIwQYMBaAFNt+Hx7vsUuu8tIGZmZzEnUqAIIrMA0GCSqGSIb3DQEBCwUAA4ICAQAWboUd9xzu4eqBwknaaVEYRE2dt9ChOJFa0KApdDPquwvhunMD5OS0DpYuTxQY6ibtgN0QV/i/c/iTD6OYxSgmrCvzy/P0bOx6VwDPiV/JkPLR5479pn3reZeoJM1l8Ver2nuUjttZHDYMMa4LR3vrkPHi+Z9KT/F5rSQ8hvQ4dRAr2PGnB9mC67Kr1fWZGeGl3BfyHEf63h0ZmNXuPjKaJiyy7X801o5ay0VFSPWulfPFzis6GK6gMTV0CM/L+P+u7tVhNpdhNBW4hJtC2k0miRgdNErj2Pc8bHNi1FJ4FvrvqzzVnQEqaf2nuaYcgt0DMXz+v/tYd7kOlCATQ05Ih/ODa2q2u/EOqPSSPRpI8bJT+7DrPjWM0y+FP8xDukw1CX/36XvDEHnegveiIf+3AcHf31dN+FuyTttrqYrEfHuFmiQnmoPQvSmF9IK0taq36QBraCJh0TgDcdeu6h7NoYURlEqytnznY7Etn2M0MLwPnjX6dWF6UaVRpK0aJS3Rj+zH/Q1PzZSHjpRP7ybrld04IfUDEnTopvajU6uf7SmKiE1OLRtKNUikx7vLDEBCTiWRHqwnwFJpnUszA6RzmxEFLPUK/3l4f9t0y/nOLCAGssrDFuYErkOfc8VFYm35JxFf5kCkySm345Ki/weVNTzlEem/yCmhoyb7n6Xptg==’

    header, payload, signature = token.split('.')
    header = json.loads(base64.urlsafe_b64decode(header))
    data = base64.b64decode(header['x5c'][0].encode('utf-8'))
    #key = cert_cryptography.get_der_certificate_public_key(data)
    key = cert_cryptography.extract_public_key_from_certificate(data)


    try:
        result = jwt.decode(token, key, algorithms='RS256')

    except jwt.InvalidIssuerError:
        print("invalude issuer")
    except jwt.DecodeError:
        print("Decoding err")
    except jwt.InvalidAlgorithmError:
        print("Expired Signatured Error")
    except jwt.ExpiredSignatureError:
        print("Signature has been expired")
    else :
        print("Decoding works well")

def _verify_rs_token(token, fields):
    header, payload, signature = token.split('.')
    header = json.loads(base64.urlsafe_b64decode(header))
    data = base64.b64decode(header['x5c'][0].encode('utf-8'))
    # key = cert_cryptography.extract_public_key_from_certificate(data)
    # key = cert_cryptography.get_der_certificate_public_key(data)
    # CertUtil.import_eaadevice_rootcert(device_root_cert, "PEM")
    CertUtil.import_eaadevice_rootcert(device_root_cert_1, "PEM")
    key = CertUtil.extract_public_key_from_certificate(data)
    # key = CertUtil.import_eaadevice_rootcert


    try:
        payload = jwt.decode(token, key, algorithms=header['alg'])
        # payload = json.b64decode(base64.urlsafe_b64decode(payload))

        if 'sub' in fields and fields['sub'] != payload['sub']:
            return False
        
        if not CertUtil.verify_certificate_sign_by_root(data):
            return False

        return True
    except jwt.InvalidIssuerError:
        print("invalude issuer")
    except jwt.DecodeError:
        print("Decoding err")
    except jwt.InvalidAlgorithmError:
        print("Expired Signatured Error")
    except jwt.ExpiredSignatureError:
        print("Signature has been expired")
        return True
    except:
        print("unknown error")

    return False


def Main():

    # jws = 'eyJ4NWMiOlsiTUlJRkZqQ0NBdjZnQXdJQkFnSUpBSlFSN3h0ek9hbmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR2ZNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ0F3TlRXRnpjMkZqYUhWelpYUjBjekVTTUJBR0ExVUVCd3dKUTJGdFluSnBaR2RsTVJ3d0dnWURWUVFLREJOQmEyRnRZV2tnVkdWamFHNXZiRzluYVdWek1Rd3dDZ1lEVlFRTERBTkxUVWt4R1RBWEJnTlZCQU1NRUVWQlFTQkVaWFpwWTJVZ1EwRWdSekV4SFRBYkJna3Foa2lHOXcwQkNRRVdEbXR0YVVCaGEyRnRZV2t1WTI5dE1CNFhEVEU1TURneE5URXhNamMwTlZvWERUSXdNRGd4TlRFeE1qYzBOVm93Z2FVeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUlEQTFOWVhOellXTm9kWE5sZEhSek1SSXdFQVlEVlFRSERBbERZVzFpY21sa1oyVXhIREFhQmdOVkJBb01FMEZyWVcxaGFTQlVaV05vYm05c2IyZHBaWE14RERBS0JnTlZCQXNNQTB0TlNURWZNQjBHQTFVRUF3d1dSVUZCSUVSbGRtbGpaU0JEWlhKMGFXWnBZMkYwWlRFZE1Cc0dDU3FHU0liM0RRRUpBUllPYTIxcFFHRnJZVzFoYVM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFET0lhZXhrWE5qdU5zdWFibDQxZml3eG9jQVNST3Y0SVJFZVd0aGJJT1VEcVdPaytxdzlzSFB0ZWxNdGFVc055emx0MlRmaTVlNlBGMXhUZXdrQnk3QUVGTE8vZEQwS2hvd1ZHbTdFendyYjNrQ2VROEI3Rld6ZGFCQis0c25nbk9ZVk9UQ3ZOMWFFTnYwQlZtTWVBN2NkbjlCMlpVTkhaaGRobytZRmNQQ3VWWGJoZm9zYWRnM2xMQlluOWhuSVlyLzJNK01samtwbkJPN2xMTlBNVmtoRGxMZU9lY0llaEgzdmJiSStZeDIxRU1ISmVFSytsNlorbnV1WXZWR0diNlV4M3Q1NVFRU1NJZElWWG5KQi9ocWVaRlhib2dMcWdUT0VOVS9PR3d1Y2hJRlJYd1NwelpMZzdRL2dWZStiSmx3VE5aUnZUQitIN0prZFM0NWlwdDFBZ01CQUFHalRUQkxNQWtHQTFVZEV3UUNNQUF3SFFZRFZSME9CQllFRk9KU3p1WXVHQ053MktZenlCNmlGcFAvbC9WeE1COEdBMVVkSXdRWU1CYUFGTnQrSHg3dnNVdXU4dElHWm1aekVuVXFBSUlyTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFBV2JvVWQ5eHp1NGVxQndrbmFhVkVZUkUyZHQ5Q2hPSkZhMEtBcGREUHF1d3ZodW5NRDVPUzBEcFl1VHhRWTZpYnRnTjBRVi9pL2MvaVRENk9ZeFNnbXJDdnp5L1AwYk94NlZ3RFBpVi9Ka1BMUjU0NzlwbjNyZVplb0pNMWw4VmVyMm51VWp0dFpIRFlNTWE0TFIzdnJrUEhpK1o5S1QvRjVyU1E4aHZRNGRSQXIyUEduQjltQzY3S3IxZldaR2VHbDNCZnlIRWY2M2gwWm1OWHVQakthSml5eTdYODAxbzVheTBWRlNQV3VsZlBGemlzNkdLNmdNVFYwQ00vTCtQK3U3dFZoTnBkaE5CVzRoSnRDMmswbWlSZ2RORXJqMlBjOGJITmkxRko0RnZydnF6elZuUUVxYWYybnVhWWNndDBETVh6K3YvdFlkN2tPbENBVFEwNUloL09EYTJxMnUvRU9xUFNTUFJwSThiSlQrN0RyUGpXTTB5K0ZQOHhEdWt3MUNYLzM2WHZERUhuZWd2ZWlJZiszQWNIZjMxZE4rRnV5VHR0cnFZckVmSHVGbWlRbm1vUFF2U21GOUlLMHRhcTM2UUJyYUNKaDBUZ0RjZGV1Nmg3Tm9ZVVJsRXF5dG56blk3RXRuMk0wTUx3UG5qWDZkV0Y2VWFWUnBLMGFKUzNSait6SC9RMVB6WlNIanBSUDd5YnJsZDA0SWZVREVuVG9wdmFqVTZ1ZjdTbUtpRTFPTFJ0S05VaWt4N3ZMREVCQ1RpV1JIcXdud0ZKcG5Vc3pBNlJ6bXhFRkxQVUsvM2w0Zjl0MHkvbk9MQ0FHc3NyREZ1WUVya09mYzhWRlltMzVKeEZmNWtDa3lTbTM0NUtpL3dlVk5UemxFZW0veUNtaG95YjduNlhwdGc9PSJdLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2V0cGNhcy5ha2FtYWkuY29tIiwiaWF0IjoxNTY1OTcwNDQzLCJzdWIiOiIzYTJiZDU2Zi1hYzc4LTRmZGEtYWZlMi1iZTliNjE4OGZiMmYiLCJleHAiOjE1NjU5NzQwNDN9.mb2iOsillWacFiFPg7sb3Wf6t41rM_WOXHCMyMBRVi8DKTVa9bbl2xHHG4M8waSESfOUVhqoqvALn80bHcGbtknIKy8rqjaJjRBzrv5TH3WXjVzOMbqbbn42GDpiDnsBr4h0g1Zfz64msc7QySy2VG8CWowSFoypn71uZ_naIBRUk8GQ5R6N5-7Mxf55zc29U0sHyXbfwTKSeUjKzZBQxtHKbTlPmq1r1JKVrDdS-tfOuXFY9V6SlIzxlWPq6puPtz7Lrjxwwhb9rPHKTKcKZ6oqcRjaUSVClORuchpSgfzCzeINazt6--HtUHyCoQU4S-_9X2ZSulIJ-9ZmoDbrqg'
    
    # Authorization = "Authorization: Bearer eyJ4NWMiOlsiTUlJRkZqQ0NBdjZnQXdJQkFnSUpBSlFSN3h0ek9hbmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR2ZNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ0F3TlRXRnpjMkZqYUhWelpYUjBjekVTTUJBR0ExVUVCd3dKUTJGdFluSnBaR2RsTVJ3d0dnWURWUVFLREJOQmEyRnRZV2tnVkdWamFHNXZiRzluYVdWek1Rd3dDZ1lEVlFRTERBTkxUVWt4R1RBWEJnTlZCQU1NRUVWQlFTQkVaWFpwWTJVZ1EwRWdSekV4SFRBYkJna3Foa2lHOXcwQkNRRVdEbXR0YVVCaGEyRnRZV2t1WTI5dE1CNFhEVEU1TURneE5URXhNamMwTlZvWERUSXdNRGd4TlRFeE1qYzBOVm93Z2FVeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUlEQTFOWVhOellXTm9kWE5sZEhSek1SSXdFQVlEVlFRSERBbERZVzFpY21sa1oyVXhIREFhQmdOVkJBb01FMEZyWVcxaGFTQlVaV05vYm05c2IyZHBaWE14RERBS0JnTlZCQXNNQTB0TlNURWZNQjBHQTFVRUF3d1dSVUZCSUVSbGRtbGpaU0JEWlhKMGFXWnBZMkYwWlRFZE1Cc0dDU3FHU0liM0RRRUpBUllPYTIxcFFHRnJZVzFoYVM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFET0lhZXhrWE5qdU5zdWFibDQxZml3eG9jQVNST3Y0SVJFZVd0aGJJT1VEcVdPaytxdzlzSFB0ZWxNdGFVc055emx0MlRmaTVlNlBGMXhUZXdrQnk3QUVGTE8vZEQwS2hvd1ZHbTdFendyYjNrQ2VROEI3Rld6ZGFCQis0c25nbk9ZVk9UQ3ZOMWFFTnYwQlZtTWVBN2NkbjlCMlpVTkhaaGRobytZRmNQQ3VWWGJoZm9zYWRnM2xMQlluOWhuSVlyLzJNK01samtwbkJPN2xMTlBNVmtoRGxMZU9lY0llaEgzdmJiSStZeDIxRU1ISmVFSytsNlorbnV1WXZWR0diNlV4M3Q1NVFRU1NJZElWWG5KQi9ocWVaRlhib2dMcWdUT0VOVS9PR3d1Y2hJRlJYd1NwelpMZzdRL2dWZStiSmx3VE5aUnZUQitIN0prZFM0NWlwdDFBZ01CQUFHalRUQkxNQWtHQTFVZEV3UUNNQUF3SFFZRFZSME9CQllFRk9KU3p1WXVHQ053MktZenlCNmlGcFAvbC9WeE1COEdBMVVkSXdRWU1CYUFGTnQrSHg3dnNVdXU4dElHWm1aekVuVXFBSUlyTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFBV2JvVWQ5eHp1NGVxQndrbmFhVkVZUkUyZHQ5Q2hPSkZhMEtBcGREUHF1d3ZodW5NRDVPUzBEcFl1VHhRWTZpYnRnTjBRVi9pL2MvaVRENk9ZeFNnbXJDdnp5L1AwYk94NlZ3RFBpVi9Ka1BMUjU0NzlwbjNyZVplb0pNMWw4VmVyMm51VWp0dFpIRFlNTWE0TFIzdnJrUEhpK1o5S1QvRjVyU1E4aHZRNGRSQXIyUEduQjltQzY3S3IxZldaR2VHbDNCZnlIRWY2M2gwWm1OWHVQakthSml5eTdYODAxbzVheTBWRlNQV3VsZlBGemlzNkdLNmdNVFYwQ00vTCtQK3U3dFZoTnBkaE5CVzRoSnRDMmswbWlSZ2RORXJqMlBjOGJITmkxRko0RnZydnF6elZuUUVxYWYybnVhWWNndDBETVh6K3YvdFlkN2tPbENBVFEwNUloL09EYTJxMnUvRU9xUFNTUFJwSThiSlQrN0RyUGpXTTB5K0ZQOHhEdWt3MUNYLzM2WHZERUhuZWd2ZWlJZiszQWNIZjMxZE4rRnV5VHR0cnFZckVmSHVGbWlRbm1vUFF2U21GOUlLMHRhcTM2UUJyYUNKaDBUZ0RjZGV1Nmg3Tm9ZVVJsRXF5dG56blk3RXRuMk0wTUx3UG5qWDZkV0Y2VWFWUnBLMGFKUzNSait6SC9RMVB6WlNIanBSUDd5YnJsZDA0SWZVREVuVG9wdmFqVTZ1ZjdTbUtpRTFPTFJ0S05VaWt4N3ZMREVCQ1RpV1JIcXdud0ZKcG5Vc3pBNlJ6bXhFRkxQVUsvM2w0Zjl0MHkvbk9MQ0FHc3NyREZ1WUVya09mYzhWRlltMzVKeEZmNWtDa3lTbTM0NUtpL3dlVk5UemxFZW0veUNtaG95YjduNlhwdGc9PSJdLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2V0cGNhcy5ha2FtYWkuY29tIiwiaWF0IjoxNTY1OTcwNDQzLCJzdWIiOiIzYTJiZDU2Zi1hYzc4LTRmZGEtYWZlMi1iZTliNjE4OGZiMmYiLCJleHAiOjE1NjU5NzQwNDN9.mb2iOsillWacFiFPg7sb3Wf6t41rM_WOXHCMyMBRVi8DKTVa9bbl2xHHG4M8waSESfOUVhqoqvALn80bHcGbtknIKy8rqjaJjRBzrv5TH3WXjVzOMbqbbn42GDpiDnsBr4h0g1Zfz64msc7QySy2VG8CWowSFoypn71uZ_naIBRUk8GQ5R6N5-7Mxf55zc29U0sHyXbfwTKSeUjKzZBQxtHKbTlPmq1r1JKVrDdS-tfOuXFY9V6SlIzxlWPq6puPtz7Lrjxwwhb9rPHKTKcKZ6oqcRjaUSVClORuchpSgfzCzeINazt6--HtUHyCoQU4S-_9X2ZSulIJ-9ZmoDbrqg"
    
    # Authorization = "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJ4NWMiOlsiTUlJRkZqQ0NBdjZnQXdJQkFnSUpBSlFSN3h0ek9hbmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR2ZNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ0F3TlRXRnpjMkZqYUhWelpYUjBjekVTTUJBR0ExVUVCd3dKUTJGdFluSnBaR2RsTVJ3d0dnWURWUVFLREJOQmEyRnRZV2tnVkdWamFHNXZiRzluYVdWek1Rd3dDZ1lEVlFRTERBTkxUVWt4R1RBWEJnTlZCQU1NRUVWQlFTQkVaWFpwWTJVZ1EwRWdSekV4SFRBYkJna3Foa2lHOXcwQkNRRVdEbXR0YVVCaGEyRnRZV2t1WTI5dE1CNFhEVEU1TURneE5URXhNamMwTlZvWERUSXdNRGd4TlRFeE1qYzBOVm93Z2FVeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUlEQTFOWVhOellXTm9kWE5sZEhSek1SSXdFQVlEVlFRSERBbERZVzFpY21sa1oyVXhIREFhQmdOVkJBb01FMEZyWVcxaGFTQlVaV05vYm05c2IyZHBaWE14RERBS0JnTlZCQXNNQTB0TlNURWZNQjBHQTFVRUF3d1dSVUZCSUVSbGRtbGpaU0JEWlhKMGFXWnBZMkYwWlRFZE1Cc0dDU3FHU0liM0RRRUpBUllPYTIxcFFHRnJZVzFoYVM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFET0lhZXhrWE5qdU5zdWFibDQxZml3eG9jQVNST3Y0SVJFZVd0aGJJT1VEcVdPaytxdzlzSFB0ZWxNdGFVc055emx0MlRmaTVlNlBGMXhUZXdrQnk3QUVGTE8vZEQwS2hvd1ZHbTdFendyYjNrQ2VROEI3Rld6ZGFCQis0c25nbk9ZVk9UQ3ZOMWFFTnYwQlZtTWVBN2NkbjlCMlpVTkhaaGRobytZRmNQQ3VWWGJoZm9zYWRnM2xMQlluOWhuSVlyLzJNK01samtwbkJPN2xMTlBNVmtoRGxMZU9lY0llaEgzdmJiSStZeDIxRU1ISmVFSytsNlorbnV1WXZWR0diNlV4M3Q1NVFRU1NJZElWWG5KQi9ocWVaRlhib2dMcWdUT0VOVS9PR3d1Y2hJRlJYd1NwelpMZzdRL2dWZStiSmx3VE5aUnZUQitIN0prZFM0NWlwdDFBZ01CQUFHalRUQkxNQWtHQTFVZEV3UUNNQUF3SFFZRFZSME9CQllFRk9KU3p1WXVHQ053MktZenlCNmlGcFAvbC9WeE1COEdBMVVkSXdRWU1CYUFGTnQrSHg3dnNVdXU4dElHWm1aekVuVXFBSUlyTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFBV2JvVWQ5eHp1NGVxQndrbmFhVkVZUkUyZHQ5Q2hPSkZhMEtBcGREUHF1d3ZodW5NRDVPUzBEcFl1VHhRWTZpYnRnTjBRVi9pL2MvaVRENk9ZeFNnbXJDdnp5L1AwYk94NlZ3RFBpVi9Ka1BMUjU0NzlwbjNyZVplb0pNMWw4VmVyMm51VWp0dFpIRFlNTWE0TFIzdnJrUEhpK1o5S1QvRjVyU1E4aHZRNGRSQXIyUEduQjltQzY3S3IxZldaR2VHbDNCZnlIRWY2M2gwWm1OWHVQakthSml5eTdYODAxbzVheTBWRlNQV3VsZlBGemlzNkdLNmdNVFYwQ00vTCtQK3U3dFZoTnBkaE5CVzRoSnRDMmswbWlSZ2RORXJqMlBjOGJITmkxRko0RnZydnF6elZuUUVxYWYybnVhWWNndDBETVh6K3YvdFlkN2tPbENBVFEwNUloL09EYTJxMnUvRU9xUFNTUFJwSThiSlQrN0RyUGpXTTB5K0ZQOHhEdWt3MUNYLzM2WHZERUhuZWd2ZWlJZiszQWNIZjMxZE4rRnV5VHR0cnFZckVmSHVGbWlRbm1vUFF2U21GOUlLMHRhcTM2UUJyYUNKaDBUZ0RjZGV1Nmg3Tm9ZVVJsRXF5dG56blk3RXRuMk0wTUx3UG5qWDZkV0Y2VWFWUnBLMGFKUzNSait6SC9RMVB6WlNIanBSUDd5YnJsZDA0SWZVREVuVG9wdmFqVTZ1ZjdTbUtpRTFPTFJ0S05VaWt4N3ZMREVCQ1RpV1JIcXdud0ZKcG5Vc3pBNlJ6bXhFRkxQVUsvM2w0Zjl0MHkvbk9MQ0FHc3NyREZ1WUVya09mYzhWRlltMzVKeEZmNWtDa3lTbTM0NUtpL3dlVk5UemxFZW0veUNtaG95YjduNlhwdGc9PSJdLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2V0cGNhcy5ha2FtYWkuY29tIiwiZXhwIjoxNTY5ODg4MDAwLCJzdWIiOiIzYTJiZDU2Zi1hYzc4LTRmZGEtYWZlMi1iZTliNjE4OGZiMmYiLCJpYXQiOjE1Njc1MTk5ODh9.Q6Lotp3AQCDC3mtzqlRZa_HiYkpN2GaIH2BApJrZgMPwsH8FsV5gkQrBwZSuehyGIstUhKN7JqrEUIjqOBGRzB2Rb8u8421IlpG4ffbBxjW2yt0t-3PkMGH3X8LnKQ6RYXXx11_UKUpfAEPxNeRCuKc4F0Q8977GBM77B8EbhUFjYV93f9RGUi_FcC0uIRM739s5hJHNWiKDj172S0wHIIPsEZwyC5UL2H5S1uYN_rEaMS3dHnRr3RxrIYzAIWe4ZoHLwxPSJUuI7LJRfBHWXPKdyOaUD7kj8NydteKIuaGYAtTzjUzf1sMSwHIPU3YHYwzvCpmx9lwcqWMGCI_mqQ"
    
    Authorization = "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJ4NWMiOlsiTUlJRkZqQ0NBdjZnQXdJQkFnSUpBSlFSN3h0ek9hbmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR2ZNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ0F3TlRXRnpjMkZqYUhWelpYUjBjekVTTUJBR0ExVUVCd3dKUTJGdFluSnBaR2RsTVJ3d0dnWURWUVFLREJOQmEyRnRZV2tnVkdWamFHNXZiRzluYVdWek1Rd3dDZ1lEVlFRTERBTkxUVWt4R1RBWEJnTlZCQU1NRUVWQlFTQkVaWFpwWTJVZ1EwRWdSekV4SFRBYkJna3Foa2lHOXcwQkNRRVdEbXR0YVVCaGEyRnRZV2t1WTI5dE1CNFhEVEU1TURneE5URXhNamMwTlZvWERUSXdNRGd4TlRFeE1qYzBOVm93Z2FVeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUlEQTFOWVhOellXTm9kWE5sZEhSek1SSXdFQVlEVlFRSERBbERZVzFpY21sa1oyVXhIREFhQmdOVkJBb01FMEZyWVcxaGFTQlVaV05vYm05c2IyZHBaWE14RERBS0JnTlZCQXNNQTB0TlNURWZNQjBHQTFVRUF3d1dSVUZCSUVSbGRtbGpaU0JEWlhKMGFXWnBZMkYwWlRFZE1Cc0dDU3FHU0liM0RRRUpBUllPYTIxcFFHRnJZVzFoYVM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFET0lhZXhrWE5qdU5zdWFibDQxZml3eG9jQVNST3Y0SVJFZVd0aGJJT1VEcVdPaytxdzlzSFB0ZWxNdGFVc055emx0MlRmaTVlNlBGMXhUZXdrQnk3QUVGTE8vZEQwS2hvd1ZHbTdFendyYjNrQ2VROEI3Rld6ZGFCQis0c25nbk9ZVk9UQ3ZOMWFFTnYwQlZtTWVBN2NkbjlCMlpVTkhaaGRobytZRmNQQ3VWWGJoZm9zYWRnM2xMQlluOWhuSVlyLzJNK01samtwbkJPN2xMTlBNVmtoRGxMZU9lY0llaEgzdmJiSStZeDIxRU1ISmVFSytsNlorbnV1WXZWR0diNlV4M3Q1NVFRU1NJZElWWG5KQi9ocWVaRlhib2dMcWdUT0VOVS9PR3d1Y2hJRlJYd1NwelpMZzdRL2dWZStiSmx3VE5aUnZUQitIN0prZFM0NWlwdDFBZ01CQUFHalRUQkxNQWtHQTFVZEV3UUNNQUF3SFFZRFZSME9CQllFRk9KU3p1WXVHQ053MktZenlCNmlGcFAvbC9WeE1COEdBMVVkSXdRWU1CYUFGTnQrSHg3dnNVdXU4dElHWm1aekVuVXFBSUlyTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFBV2JvVWQ5eHp1NGVxQndrbmFhVkVZUkUyZHQ5Q2hPSkZhMEtBcGREUHF1d3ZodW5NRDVPUzBEcFl1VHhRWTZpYnRnTjBRVi9pL2MvaVRENk9ZeFNnbXJDdnp5L1AwYk94NlZ3RFBpVi9Ka1BMUjU0NzlwbjNyZVplb0pNMWw4VmVyMm51VWp0dFpIRFlNTWE0TFIzdnJrUEhpK1o5S1QvRjVyU1E4aHZRNGRSQXIyUEduQjltQzY3S3IxZldaR2VHbDNCZnlIRWY2M2gwWm1OWHVQakthSml5eTdYODAxbzVheTBWRlNQV3VsZlBGemlzNkdLNmdNVFYwQ00vTCtQK3U3dFZoTnBkaE5CVzRoSnRDMmswbWlSZ2RORXJqMlBjOGJITmkxRko0RnZydnF6elZuUUVxYWYybnVhWWNndDBETVh6K3YvdFlkN2tPbENBVFEwNUloL09EYTJxMnUvRU9xUFNTUFJwSThiSlQrN0RyUGpXTTB5K0ZQOHhEdWt3MUNYLzM2WHZERUhuZWd2ZWlJZiszQWNIZjMxZE4rRnV5VHR0cnFZckVmSHVGbWlRbm1vUFF2U21GOUlLMHRhcTM2UUJyYUNKaDBUZ0RjZGV1Nmg3Tm9ZVVJsRXF5dG56blk3RXRuMk0wTUx3UG5qWDZkV0Y2VWFWUnBLMGFKUzNSait6SC9RMVB6WlNIanBSUDd5YnJsZDA0SWZVREVuVG9wdmFqVTZ1ZjdTbUtpRTFPTFJ0S05VaWt4N3ZMREVCQ1RpV1JIcXdud0ZKcG5Vc3pBNlJ6bXhFRkxQVUsvM2w0Zjl0MHkvbk9MQ0FHc3NyREZ1WUVya09mYzhWRlltMzVKeEZmNWtDa3lTbTM0NUtpL3dlVk5UemxFZW0veUNtaG95YjduNlhwdGc9PSJdLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2V0cGNhcy5ha2FtYWkuY29tIiwiZXhwIjoxNTY5ODg4MDAwLCJzdWIiOiIzYTJiZDU2Zi1hYzc4LTRmZGEtYWZlMi1iZTliNjE4OGZiMmYiLCJpYXQiOjE1Njc1MTk5ODh9.Q6Lotp3AQCDC3mtzqlRZa_HiYkpN2GaIH2BApJrZgMPwsH8FsV5gkQrBwZSuehyGIstUhKN7JqrEUIjqOBGRzB2Rb8u8421IlpG4ffbBxjW2yt0t-3PkMGH3X8LnKQ6RYXXx11_UKUpfAEPxNeRCuKc4F0Q8977GBM77B8EbhUFjYV93f9RGUi_FcC0uIRM739s5hJHNWiKDj172S0wHIIPsEZwyC5UL2H5S1uYN_rEaMS3dHnRr3RxrIYzAIWe4ZoHLwxPSJUuI7LJRfBHWXPKdyOaUD7kj8NydteKIuaGYAtTzjUzf1sMSwHIPU3YHYwzvCpmx9lwcqWMGCI_mqQ"

    header, value = Authorization.split(":")
    value = value.lstrip()
    if not value.startswith("Bearer "):
        return False
 
    value = value[6:]
    token = value.lstrip().rstrip()

    header, payload, signature = token.split('.')

    if not all((header, payload, signature)):
        return False

    header = json.loads(base64.urlsafe_b64decode(header))

    if header["typ"] != "JWT":
        return False 

    if "alg" not in header or len(header["alg"]) != 5 or header["alg"][:2] not in ("HS", "RS"):
        return False

    if header["alg"].startswith("RS") and "x5c" in header:
        return _verify_rs_token(token, {"sub": "3a2bd56f-ac78-4fda-afe2-be9b6188fb2f"})


def verify_json():

    try:
        data = b"{ \"type\": \"PEM\", \"data\": \"-----BEGIN CERTIFICATE-----\
MIIGHjCCBAagAwIBAgIUDko8FhRn0DLgISykhELLjX5zTp4wDQYJKoZIhvcNAQEL\
BQAwgZ8xCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNzYWNodXNldHRzMRIwEAYD\
VQQHDAlDYW1icmlkZ2UxHDAaBgNVBAoME0FrYW1haSBUZWNobm9sb2dpZXMxDDAK\
BgNVBAsMA0tNSTEZMBcGA1UEAwwQRUFBIERldmljZSBDQSBHMTEdMBsGCSqGSIb3\
DQEJARYOa21pQGFrYW1haS5jb20wHhcNMTkwODE1MTEyNzQ1WhcNMjEwMjE1MTEy\
NzQ1WjCBnzELMAkGA1UEBhMCVVMxFjAUBgNVBAgMDU1hc3NhY2h1c2V0dHMxEjAQ\
BgNVBAcMCUNhbWJyaWRnZTEcMBoGA1UECgwTQWthbWFpIFRlY2hub2xvZ2llczEM\
MAoGA1UECwwDS01JMRkwFwYDVQQDDBBFQUEgRGV2aWNlIENBIEcxMR0wGwYJKoZI\
hvcNAQkBFg5rbWlAYWthbWFpLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCC\
AgoCggIBALzx0CfEC9GzhptNxe09RMNDwtF2rR+1v4XPkDbH7Zzg/FRbXRo0ug9t\
sCOhaYoBBFwzjfUZTFKIEYPAWOgmRBR+JGaElzwc2vMq8S7mHyAkaKktFykdB1qP\
b+uPOgXF3JjeJF/DQ1GjDsTQq5hoviLx5Pwd/V/XpQkbdmHSehYFsGFfKVFvGulk\
3JGb7AB862ZUBKW4FBXwrcCpc4SYxMMwwYzBlMl+V1wGQeGosFCQ1Tn/1fd2t+QR\
LzEybAmtY+gEK+7B9CVsqdsE63M88sVzrsNmeBRn2OnnOu6cqq8qcK0dtJPL77vM\
D0ivgopgRC9LAlymGjAdujG33aIrmaOEmlrAewJJ9wCbk8AIEB4FQKealMfxuXoB\
uK0QqnQiL8e0Cxjs2CQSPQ/67giHgiQGCFVDVIzGDIhUm/0gCrohcb7PQ5Af4+DF\
HMpIQvLfYTDDzLOrCImiNa4cyAj7s4YcbIKWQNU08B6/u4CQ6YLh3+Jabe2TBeie\
1QD3r3znLtSqCka5IKD5Og42Gz5y90o39ITp+CyTRb4dzTuqkXhVSsOCCrLUFKlK\
qFgtiy54KbulrmRI0D/ew2R7oYiVWjDqA30czfsOxrbO0F3S2XXRgiPcYOB8nWh1\
wJtjlgFwz47u8L0xL0PS2LriTY1Njut8iW+McLvl1DLTNEME25PlAgMBAAGjUDBO\
MAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYEFNt+Hx7vsUuu8tIGZmZzEnUqAIIrMB8G\
A1UdIwQYMBaAFNt+Hx7vsUuu8tIGZmZzEnUqAIIrMA0GCSqGSIb3DQEBCwUAA4IC\
AQBg8eBOFI0o1ORV+Zdqd0O9sII9fBmRFy9t2JJ8sQ+54grRgsw/7dYqFO5E9h4b\
n/HIW5nINpaaDesl6J26+ymHsifeuqJFcnlabg8MJWeG0Z0g1wx7Ib0uiO3sWZ7v\
whLTPD0Sm/Pn6iNLlzf/rKaTdNbHDVxIY2jPpMTK8Lt/d40b+CF/PgFozZBynjWt\
fJDnFg+NGbZgYAlPWRU0AklAtnpJdRjHpxO6Vjj8YYfRKP2vnpGm3KcKdSHguy9Q\
hTChNhUbsG1oAEDASDI7ScQdQF+FYFR5E+IboRyOnCoULRrfqVP3cUmAB00hjfkU\
6Ngsk2oPnwDJm0hAdR8lwISvcgFDDZZ9BB//sncKPkJg2IpNK6mvrTXqdj/Y3koM\
lltRzJNihkeOnUmi6Ta6IZwgQaPM0M+ByLUC0fEMogpy9szNc8NtjMlgu1nSZYsX\
nRLPuS2A4UynEx02VwzmPyInKgaM/etEFE83w9VuW1tbp1IYILjDH20BW/Si6ZQV\
Trjul2J2wBtF2aroVp3qir+DxJAMtwJcDNAAa5yaMP2tfUlPSGztiVMqtRGuJtYJ\
BNpenEeQ3iidStIylqwq8abzmOllH3J1jgbJTJ7/eIqwKZPN0JKwSw4Q253hkb2E\
bKnObmYffXchMKpoDbva/0xYDiBPKakZVSkV8gvwjW5oAw==\
-----END CERTIFICATE-----\"}"

        body = json.loads(data.decode('utf-8'))
        schema = {
            "type": "object",
            "properties": {
                "type": { "type": "string"},
                "data": {"type": "string"}
            },
            "required": ["type", "data"]
        }

        body["data"] = device_root_cert_1
        validate(body, schema)

        print(body)

    except json.ValidationError as val_ex:
        raise json.InvalidInputException("Failed to validate json body.  %s" % val_ex.message)

    except json.SchemaError as ex:
        # error("failed to validate json %s against schema %s    message: %s", json_data, json_schema, ex.message)
        raise json.UnknownException("Unable to validate json ")


if __name__ == "__main__":

    Main()

    verify_json()